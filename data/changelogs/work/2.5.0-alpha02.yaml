libraryId: work
groupId: androidx.work
version: 2.5.0-alpha02
releaseDate: 2020-09-16
#language=html
changelogHtml: |
  <h3 id="2.5.0-alpha02" data-text="Version 2.5.0-alpha02" tabindex="-1">Version 2.5.0-alpha02</h3>
  <p>September 16, 2020</p>
  <p>
    <code translate="no" dir="ltr">androidx.work:work-*:2.5.0-alpha02</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/96eb302ee1740ba656c90c9fb27df3723a1a89c1..18a5639262f8504db530176550e338a5d0e2e044/work">Version 2.5.0-alpha02 contains these commits.</a>
  </p>
  <p><strong>New Features</strong></p>
  <ul>
    <li>
      Add an API to WorkQuery to be able to use
      <code translate="no" dir="ltr">id</code>
      s to query
      <code translate="no" dir="ltr">WorkInfo</code>
      s. (
      <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1412372">aosp/1412372</a>
      ,
      <a href="https://issuetracker.google.com/issues/157335295">b/157335295</a>
      )
    </li>
    <li>
      WorkManager better supports apps that use multiple processes with a new artifact (
      <code translate="no" dir="ltr">androidx.work:work-multiprocess:*</code>
      ). This new artifact helps solve a few problems that large apps encounter including:
      <ul>
        <li>
          WorkManager typically needs to be initialized in every app process. This is not great because there is increased SQLite contention which in turn causes other problems. WorkManager now has new APIs which can be used to designate a
          <em>primary</em>
          app process using
          <code translate="no" dir="ltr">Configuration#setDefaultProcessName(processName)</code>
          . The
          <code translate="no" dir="ltr">processName</code>
          is a fully qualified process name which looks like
          <code translate="no" dir="ltr">packageName:processName</code>
          (e.g.
          <code translate="no" dir="ltr">com.example:remote</code>
          ).
        </li>
        <li>
          A set of new APIs:
          <code translate="no" dir="ltr">RemoteWorkManager</code>
          and
          <code translate="no" dir="ltr">RemoteWorkContinuation</code>
          to
          <code translate="no" dir="ltr">enqueue</code>
          ,
          <code translate="no" dir="ltr">cancel</code>
          and
          <code translate="no" dir="ltr">query</code>
          work requests. These APIs do
          <em>not</em>
          include
          <code translate="no" dir="ltr">LiveData</code>
          variants to avoid SQLite contention across multiple-processes. All calls to
          <code translate="no" dir="ltr">enqueue</code>
          ,
          <code translate="no" dir="ltr">cancel</code>
          and
          <code translate="no" dir="ltr">query</code>
          are forwarded to a
          <code translate="no" dir="ltr">primary</code>
          app process using AIDL and return a fluent
          <code translate="no" dir="ltr">ListenableFuture</code>
          . (
          <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1392657">aosp/1392657</a>
          ,
          <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1411210">aosp/1411210</a>
          ,
          <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1412215">aosp/1412215</a>
          ,
          <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1417713">aosp/1417713</a>
          )
        </li>
      </ul>
    </li>
  </ul>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      WorkManager now prunes completed
      <code translate="no" dir="ltr">WorkRequest</code>
      s that have no incomplete dependencies more aggressively. The buffer duration changed from
      <code translate="no" dir="ltr">7</code>
      days to
      <code translate="no" dir="ltr">1</code>
      day. (
      <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1419708">aosp/1419708</a>
      )
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      WorkManager now reconciles jobs proactively so
      <code translate="no" dir="ltr">WorkRequest</code>
      s and
      <code translate="no" dir="ltr">JobScheduler</code>
      jobs are in sync when
      <code translate="no" dir="ltr">WorkManager</code>
      is initialized. (
      <a href="https://android-review.googlesource.com/c/platform/frameworks/support/+/1412794">aosp/1412794</a>
      ,
      <a href="https://issuetracker.google.com/issues/166292069">b/166292069</a>
      )
    </li>
  </ul>
