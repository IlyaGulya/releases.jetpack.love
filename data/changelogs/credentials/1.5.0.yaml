libraryId: credentials
groupId: androidx.credentials
version: 1.5.0
releaseDate: 2025-03-12
#language=html
changelogHtml: |
  <h3 id="1.5.0" data-text="Version 1.5.0" tabindex="-1">Version 1.5.0</h3>
  <p>March 12, 2025</p>
  <p>
    <code translate="no" dir="ltr">androidx.credentials:credentials:1.5.0</code>
    and
    <code translate="no" dir="ltr">androidx.credentials:credentials-play-services-auth:1.5.0</code>
    are released. Version 1.5.0 contains
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/c21f3bc469f2586b3241fae2c8f46a007e8628e8..4fec16dcf4d565b5728b351888615c364d031a25/credentials">these commits</a>
    .
  </p>
  <p><strong>Important changes since 1.3.0</strong></p>
  <ul>
    <li>
      Secondary UI experience for credential selection: App developers that call Credential Manager APIs at sign-in moments to present the user with a selector, are now able to use new APIs to associate the same
      <code translate="no" dir="ltr">GetCredentialRequest</code>
      with a given view, such as a username or a password field. Subsequently, when the user focuses on one of these views, the corresponding request will be sent to Credential Manager. The resulting credentials are aggregated across providers and displayed in autofill like secondary UIs, such as keyboard or dropdown suggestions. As such when all APIs are used together, the user is first presented with a selector, and if dismissed and taps on one of the fields mentioned above, is then presented with keyboard/dropdown suggestions.
    </li>
    <li>
      Restore Credentials: The restore credential is used to restore the user's credential from the previous device to a new Android device. By creating a
      <code translate="no" dir="ltr">RestoreCredential</code>
      for the user, the credential will be automatically transferred over to the user's new device if the user selects the app to be transferred from the old device during the setup stage.
    </li>
  </ul>
