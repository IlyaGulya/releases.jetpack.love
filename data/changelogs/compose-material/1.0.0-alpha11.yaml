libraryId: compose-material
groupId: androidx.compose
version: 1.0.0-alpha11
releaseDate: 2021-01-28
#language=html
changelogHtml: |
  <h3 id="1.0.0-alpha11" data-text="Version 1.0.0-alpha11" tabindex="-1">Version 1.0.0-alpha11</h3>
  <p>January 28, 2021</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.material:material-*:1.0.0-alpha11</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/6207afb1646d302c5d29c2c67d332b48db87fb27..6950aab50fe6c9f7e9d97cf865161f2d3999eb9e/compose/material">Version 1.0.0-alpha11 contains these commits.</a>
  </p>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      Promotes some Material APIs to no longer be
      <code translate="no" dir="ltr">@Experimental</code>
      (
      <a href="https://android-review.googlesource.com/#/q/I5d20e2ae511aca075231e8ef32026e1ef76b5b6b">I5d20e</a>
      )
    </li>
    <li>
      Content description parameter has been added to the Image and Icon. It is used to provide description to the accessibility services (
      <a href="https://android-review.googlesource.com/#/q/I2ac4c1058ed0bf1e5756cc6cdae546806974409e">I2ac4c</a>
      )
    </li>
    <li>
      Changes Material stateful parameter interfaces to have @Composable functions that return
      <code translate="no" dir="ltr">State&lt;T&gt;</code>
      . Adds
      <code translate="no" dir="ltr">Animatable.asState()</code>
      to make it easier to convert an Animatable to a State. Also changes animateElevation to be a suspend extension on Animatable. (
      <a href="https://android-review.googlesource.com/#/q/If613cc7c751a11b77a03f8066b233b7e55cb67e0">If613c</a>
      )
    </li>
    <li>
      Snackbar, SnackbarHost, SnackbarHostState are not
      <code translate="no" dir="ltr">@ExperimentalMaterialAPI</code>
      anymore (
      <a href="https://android-review.googlesource.com/#/q/Id1fb55a91d53bd74adb131a318fee1cad0b485d8">Id1fb5</a>
      )
    </li>
    <li>
      Changes Typography, Shapes, and TabPosition to no longer be data classes. Adds copy function for Typography and Shapes to replace the generated ones. (
      <a href="https://android-review.googlesource.com/#/q/I40037a96c8484c01d28a4dd1d8ab7a3105a34805">I40037</a>
      )
    </li>
    <li>
      Deleted some previously deprecated Material APIs (
      <a href="https://android-review.googlesource.com/#/q/Ifaa25387db4af0195bdccb465d6ebb76a9a24297">Ifaa25</a>
      )
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      onCommit, onDispose, and onActive have been deprecated in favor of SideEffect and DisposableEffect APIs (
      <a href="https://android-review.googlesource.com/#/q/If760ec2a190c4121a35006695d953010ac22a43a">If760e</a>
      )
    </li>
    <li>
      TransitionDefinition-based Transition has been deprecated (
      <a href="https://android-review.googlesource.com/#/q/I0ac57acd13386d028dfe0840e8ce509362cf107e">I0ac57</a>
      )
    </li>
    <li>
      Initial State in updateTransition is now supported (
      <a href="https://android-review.googlesource.com/#/q/Ifd51d5c737b86d52282c18e29b89e75e1c0bea35">Ifd51d</a>
      )
    </li>
    <li>
      WithConstraints was reworked as BoxWithConstraints and moved to foundation.layout. (
      <a href="https://android-review.googlesource.com/#/q/I9420b9e0fbea7ee048b23a6ef328165bbb11e8a8">I9420b</a>
      ,
      <a href="https://issuetracker.google.com/issues/173387208">b/173387208</a>
      )
    </li>
    <li>
      <p>Deprecate non-suspend scrollBy, remove non-suspend scrollTo</p>

      <p>
        We now recommend using suspend functions to control scrolling and wait for the scroll to finish. We are deprecating and/or removing the non-suspend versions of these functions as part of this transition. (
        <a href="https://android-review.googlesource.com/#/q/Ie9cedf8bc71b54353a175699901edd92f850d02c">Ie9ced</a>
        )
      </p>
    </li>
    <li>
      <p>
        Deprecate non-suspend smoothScrollBy We now recommend using suspend functions to control scrolling and wait for the scroll to finish. We are deprecating the non-suspend versions of these functions as part of this transition. (
        <a href="https://android-review.googlesource.com/#/q/I128806c8aea7f17758d1a5d953bbe40e3bcc1b18">I12880</a>
        )
      </p>
    </li>
    <li>
      <p>
        Introduced
        <code translate="no" dir="ltr">ComposeContentTestRule</code>
        , which extends
        <code translate="no" dir="ltr">ComposeTestRule</code>
        and defines
        <code translate="no" dir="ltr">setContent</code>
        , which has been removed from
        <code translate="no" dir="ltr">ComposeTestRule</code>
        . Added a factory method
        <code translate="no" dir="ltr">createEmptyComposeRule()</code>
        that returns a
        <code translate="no" dir="ltr">ComposeTestRule</code>
        and does not launch an Activity for you. Use this when you want to launch your Activity during your test, e.g. using
        <code translate="no" dir="ltr">ActivityScenario.launch</code>
        (
        <a href="https://android-review.googlesource.com/#/q/I9d78283c27d87a3135071884e115bbd814492c47">I9d782</a>
        ,
        <a href="https://issuetracker.google.com/issues/174472899">b/174472899</a>
        )
      </p>
    </li>
    <li>
      <p>
        The ripple used in Button and FloatingActionButton can no longer be customized by providing a new Indication through AmbientIndication - this was never intended to be a way to customize these components and this now makes these components consistent with other Material components. To customize ripples across an application, see RippleTheme. (
        <a href="https://android-review.googlesource.com/#/q/I546c59bf53904435e14590ed4b3ca9973704bff3">I546c5</a>
        )
      </p>
    </li>
    <li>
      <p>
        animateAsState is now animateFooAsState, where Foo is the type of the variable being animated. e.g. Float, Dp, Offset, etc (
        <a href="https://android-review.googlesource.com/#/q/Ie7e25c8978996334b0dcc757b07df1434ff346aa">Ie7e25</a>
        )
      </p>
    </li>
    <li>
      <p>
        BasicTextField received a new parameter called
        <code translate="no" dir="ltr">decorationBox</code>
        . It allows to add the decorations like icons, placeholder, label and similar to the text field and increase the hit target area of it. (
        <a href="https://android-review.googlesource.com/#/q/I169960830df82b0406ac4b6868ea544c9f848403">I16996</a>
        )
      </p>
    </li>
    <li>
      <p>
        Fix for a bug which made it not possible to set the width of the material text field be less than 280.dp (
        <a href="https://android-review.googlesource.com/#/q/I7837308a081e04d00ac4bf7e71b2f65698cebf00">I78373</a>
        )
      </p>
    </li>
    <li>
      <p>
        canDrag parameter has been removed from the Modifier.draggable (
        <a href="https://android-review.googlesource.com/#/q/Ic4bec74b6fb3a9306abe4fdee7c6961ad3a62d77">Ic4bec</a>
        ,
        <a href="https://issuetracker.google.com/issues/175294473">b/175294473</a>
        )
      </p>
    </li>
    <li>
      <p>
        Remove displaySize as it should be avoided. Typically it is better to use size of onRoot() or window size at least. (
        <a href="https://android-review.googlesource.com/#/q/I62db4535f36b09ab6f0b874c221ece0b352db962">I62db4</a>
        )
      </p>
    </li>
    <li>
      <p>
        Surface can now have multiple layout children. (
        <a href="https://android-review.googlesource.com/#/q/I66a921f3963162ae62cdb498298e6aa4210cf602">I66a92</a>
        ,
        <a href="https://issuetracker.google.com/issues/144488459">b/144488459</a>
        )
      </p>
    </li>
    <li>
      <p>
        invalidate and compositionReference() are now deprecated in favor of currentRecomposeScope and rememberCompositionReference respectively. (
        <a href="https://android-review.googlesource.com/#/q/I583a8efa6e3d3bc303792b825b948b3722ada103">I583a8</a>
        )
      </p>
    </li>
    <li>
      <p>
        Changes PopupPositionProvider to use window-relative coordinates, not global coordinates. Renames parentGlobalBounds to anchorBounds, and changes windowGlobalBounds to be
        <code translate="no" dir="ltr">windowSize: IntSize</code>
        (
        <a href="https://android-review.googlesource.com/#/q/I2994a280d3d5c2eafa3a7027f7df5403acaa9cc9">I2994a</a>
        )
      </p>
    </li>
    <li>
      <p>
        Duration and Uptime will be replace with Long milliseconds, and this step removes the dependency of pointer input on those classes. (
        <a href="https://android-review.googlesource.com/#/q/Ia33b2d6835861501019481b388cb2c99441c346c">Ia33b2</a>
        ,
        <a href="https://issuetracker.google.com/issues/175142755">b/175142755</a>
        ,
        <a href="https://issuetracker.google.com/issues/177420019">b/177420019</a>
        )
      </p>
    </li>
    <li>
      <p>
        AnimatedFloat.fling that accepts FlingConfig has been removed. Please use suspend Animatable.animateDecay instead. (
        <a href="https://android-review.googlesource.com/#/q/I4659b606834e8325473fd672d824114b8ec20173">I4659b</a>
        ,
        <a href="https://issuetracker.google.com/issues/177457083">b/177457083</a>
        )
      </p>
    </li>
    <li>
      <p>
        clickable, toggleable and selectable can be created outside of composition now (
        <a href="https://android-review.googlesource.com/#/q/I0a130bfa57713c96cc8b52c67becd32145526685">I0a130</a>
        ,
        <a href="https://issuetracker.google.com/issues/172938345">b/172938345</a>
        ,
        <a href="https://issuetracker.google.com/issues/175294473">b/175294473</a>
        )
      </p>
    </li>
    <li>
      <p>
        Easing has been changed to a functional interface (
        <a href="https://android-review.googlesource.com/#/q/Ib14e513b2c4b839287535bda19ae93375a4baa73">Ib14e5</a>
        )
      </p>
    </li>
    <li>
      <p>
        ScrollableColumn/Row were deprecated. Using ScrollableColumn is less efficient comparing to LazyColumn when you have a large scrolling content because with LazyColumn we can only compose/measure/draw visible elements. To prevent users from going inefficient way we decided to deprecate ScrollableColumn and ScrollableRow and promote usages of LazyColumn and LazyRow instead. Users can still decide they don't need the lazy behaviour and use the modifiers directly like this: Column(Modifier.verticalScroll(rememberScrollState())) (
        <a href="https://android-review.googlesource.com/#/q/Ib976b534e063a86a2c587762b786a23e32cc61b6">Ib976b</a>
        ,
        <a href="https://issuetracker.google.com/issues/170468083">b/170468083</a>
        )
      </p>
    </li>
    <li>
      <p>
        New
        <code translate="no" dir="ltr">items(count: Int)</code>
        factory method for scope of LazyColumn/LazyRow/LazyVerticalGrid.
        <code translate="no" dir="ltr">items(items: List)</code>
        and
        <code translate="no" dir="ltr">itemsIndexed(items: List)</code>
        are now extension functions so you have to manually import them when used. New extension overloads for Arrays:
        <code translate="no" dir="ltr">items(items: Array)</code>
        and
        <code translate="no" dir="ltr">itemsIndexed(Array)</code>
        (
        <a href="https://android-review.googlesource.com/#/q/I803fc5f25fac55855c710ff5064f11525f7b6010">I803fc</a>
        ,
        <a href="https://issuetracker.google.com/issues/175562574">b/175562574</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed experimental monotonicFrameAnimationClockOf methods (
        <a href="https://android-review.googlesource.com/#/q/Ib753f5d3cb77dabc7727f677a73bb7da8dae5fe2">Ib753f</a>
        ,
        <a href="https://issuetracker.google.com/issues/170708374">b/170708374</a>
        )
      </p>
    </li>
    <li>
      <p>
        Deprecated global coordinates methods and made new window-based coordinates methods. (
        <a href="https://android-review.googlesource.com/#/q/Iee284dee7dbc4226493feb144d446a0289b7c83e">Iee284</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added Modifier.toolingGraphicsLayer which adds a graphics layer modifier when inspection is turned on. (
        <a href="https://android-review.googlesource.com/#/q/I315df592b0903a783dcd48deff73f31beb63b56c">I315df</a>
        )
      </p>
    </li>
    <li>
      <p>
        FocusRequester.createRefs is now marked as experimental as it might change. (
        <a href="https://android-review.googlesource.com/#/q/I2d898d56ed0ac33f5a08253509cfd811ee0e8a5d">I2d898</a>
        ,
        <a href="https://issuetracker.google.com/issues/177000821">b/177000821</a>
        )
      </p>
    </li>
    <li>
      <p>
        SemanticsPropertyReceiver.hidden was renamed to invisibleToUser and marked @ExperimentalComposeUiApi. AccessibilityRangeInfo was renamed to ProgressBarRangeInfo. stateDescriptionRange was renamed to progressBarRangeInfo. AccessibilityScrollState was renamed to ScrollAxisRange. horizontalAccessibilityScrollState was renamed to horizontalScrollAxisRange. verticalAccessibilityScrollState was renamed to verticalScrollAxisRange. (
        <a href="https://android-review.googlesource.com/#/q/Id31487aa7cbddf4d3d163999afae458cdab4dc8a">Id3148</a>
        )
      </p>
    </li>
    <li>
      <p>
        Leverage TestCoroutineDispatcher in testing (
        <a href="https://android-review.googlesource.com/#/q/I532b68e37ea6f72964fdcc267e397d285cffd9ad">I532b6</a>
        )
      </p>
    </li>
    <li>
      <p>
        Updated vector graphics API to support parsing of tinting applied to root of vector graphics. (
        <a href="https://android-review.googlesource.com/#/q/Id9d53298227fdce798db2968f79d1d27c57c1312">Id9d53</a>
        ,
        <a href="https://issuetracker.google.com/issues/177210509">b/177210509</a>
        )
      </p>
    </li>
  </ul>
