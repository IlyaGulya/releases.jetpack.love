libraryId: compose-material3-adaptive
groupId: androidx.compose
version: 1.1.0
releaseDate: 2025-03-12
#language=html
changelogHtml: |
  <h3 id="1.1.0" data-text="Version 1.1.0" tabindex="-1">Version 1.1.0</h3>
  <p>March 12, 2025</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.material3.adaptive:adaptive-*:1.1.0</code>
    is released. Version 1.1.0 contains
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/ebeae502fb9637851a88554d75ff2c9280422de2..5551c4584e9e6e93a700313cdc7b4712aca7a1f9/compose/material3/adaptive">these commits</a>
    .
  </p>
  <p><strong>Important changes since 1.0.0</strong></p>
  <ul>
    <li>
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/layout/package-summary#ListDetailPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective,androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState,kotlin.Function1,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Function1,kotlin.Function2,androidx.compose.material3.adaptive.layout.PaneExpansionState)"><code translate="no" dir="ltr">ListDetailPaneScaffold</code></a>
      and
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/layout/package-summary#SupportingPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective,androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue,kotlin.Function1,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Function1,kotlin.Function2,androidx.compose.material3.adaptive.layout.PaneExpansionState)"><code translate="no" dir="ltr">SupportingPaneScaffold</code></a>
      is now supporting the pane expansion feature - users can drag to change the default pane split of a dual pane layout, developers can also change the pane split at runtime via altering the newly introduced
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/layout/PaneExpansionState"><code translate="no" dir="ltr">PaneExpansionState</code></a>
      .
    </li>
    <li>
      Default predictive back support is now available with
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/navigation/package-summary#NavigableListDetailPaneScaffold(androidx.compose.material3.adaptive.navigation.ThreePaneScaffoldNavigator,kotlin.Function1,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Function1,androidx.compose.material3.adaptive.navigation.BackNavigationBehavior,kotlin.Function2,androidx.compose.material3.adaptive.layout.PaneExpansionState)"><code translate="no" dir="ltr">NavigableListDetailPaneScaffold</code></a>
      and
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/navigation/package-summary#NavigableSupportingPaneScaffold(androidx.compose.material3.adaptive.navigation.ThreePaneScaffoldNavigator,kotlin.Function1,kotlin.Function1,androidx.compose.ui.Modifier,kotlin.Function1,androidx.compose.material3.adaptive.navigation.BackNavigationBehavior,kotlin.Function2,androidx.compose.material3.adaptive.layout.PaneExpansionState)"><code translate="no" dir="ltr">NavigableSupportingPaneScaffold</code></a>
      . You can also use
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/navigation/package-summary#ThreePaneScaffoldPredictiveBackHandler(androidx.compose.material3.adaptive.navigation.ThreePaneScaffoldNavigator,androidx.compose.material3.adaptive.navigation.BackNavigationBehavior)"><code translate="no" dir="ltr">ThreePaneScaffoldPredictiveBackHandler</code></a>
      to provide predictive back support with your own three pane scaffold implementations.
    </li>
    <li>
      You can now customize your pane motions during pane switching by providing different
      <code translate="no" dir="ltr">EnterTransition</code>
      and
      <code translate="no" dir="ltr">ExitTransition</code>
      to
      <a href="/reference/kotlin/androidx/compose/material3/adaptive/layout/package-summary#(androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldPaneScope).AnimatedPane(androidx.compose.ui.Modifier,androidx.compose.animation.EnterTransition,androidx.compose.animation.ExitTransition,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.Function1)"><code translate="no" dir="ltr">AnimatedPane</code></a>
      .
    </li>
  </ul>
