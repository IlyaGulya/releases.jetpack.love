libraryId: compose-animation
groupId: androidx.compose
version: 1.0.0-alpha11
releaseDate: 2021-01-28
#language=html
changelogHtml: |
  <h3 id="1.0.0-alpha11" data-text="Version 1.0.0-alpha11" tabindex="-1">Version 1.0.0-alpha11</h3>
  <p>January 28, 2021</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.animation:animation:1.0.0-alpha11</code>
    and
    <code translate="no" dir="ltr">androidx.compose.animation:animation-core:1.0.0-alpha11</code>
    are released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/6207afb1646d302c5d29c2c67d332b48db87fb27..6950aab50fe6c9f7e9d97cf865161f2d3999eb9e/compose/animation">Version 1.0.0-alpha11 contains these commits.</a>
  </p>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      TransitionDefinition-based Transition has been deprecated (
      <a href="https://android-review.googlesource.com/#/q/I0ac57acd13386d028dfe0840e8ce509362cf107e">I0ac57</a>
      )
    </li>
    <li>
      A label field is added for Transition and child animations to be displayed in tools (
      <a href="https://android-review.googlesource.com/#/q/I619fb982527ac50dc6d0bdac0227b2d830b81397">I619fb</a>
      )
    </li>
    <li>
      animateAsState is now animateFooAsState, where Foo is the type of the variable being animated. e.g. Float, Dp, Offset, etc (
      <a href="https://android-review.googlesource.com/#/q/Ie7e25c8978996334b0dcc757b07df1434ff346aa">Ie7e25</a>
      )
    </li>
    <li>
      New InfiniteTransition that runs any number of child animations. (
      <a href="https://android-review.googlesource.com/#/q/I1da81724c9f9d1c20f5c24b3170f7c9f899fcb23">I1da81</a>
      )
    </li>
    <li>
      Changes Material stateful parameter interfaces to have @Composable functions that return
      <code translate="no" dir="ltr">State&lt;T&gt;</code>
      . Adds Animatable.asState() to make it easier to convert an Animatable to a State. Also changes animateElevation to be a suspend extension on Animatable. (
      <a href="https://android-review.googlesource.com/#/q/If613cc7c751a11b77a03f8066b233b7e55cb67e0">If613c</a>
      )
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      onCommit, onDispose, and onActive have been deprecated in favor of SideEffect and DisposableEffect APIs (
      <a href="https://android-review.googlesource.com/#/q/If760ec2a190c4121a35006695d953010ac22a43a">If760e</a>
      )
    </li>
    <li>
      Initial State in updateTransition is now supported (
      <a href="https://android-review.googlesource.com/#/q/Ifd51d5c737b86d52282c18e29b89e75e1c0bea35">Ifd51d</a>
      )
    </li>
    <li>
      Content description parameter has been added to the Image and Icon. It is used to provide description to the accessibility services (
      <a href="https://android-review.googlesource.com/#/q/I2ac4c1058ed0bf1e5756cc6cdae546806974409e">I2ac4c</a>
      )
    </li>
    <li>
      invalidate and compositionReference() are now deprecated in favor of currentRecomposeScope and rememberCompositionReference respectively. (
      <a href="https://android-review.googlesource.com/#/q/I583a8efa6e3d3bc303792b825b948b3722ada103">I583a8</a>
      )
    </li>
    <li>
      Duration and Uptime will be replace with Long milliseconds, and this step removes the dependency of pointer input on those classes. (
      <a href="https://android-review.googlesource.com/#/q/Ia33b2d6835861501019481b388cb2c99441c346c">Ia33b2</a>
      ,
      <a href="https://issuetracker.google.com/issues/175142755">b/175142755</a>
      ,
      <a href="https://issuetracker.google.com/issues/177420019">b/177420019</a>
      )
    </li>
    <li>
      clickable, toggleable and selectable can be created outside of composition now (
      <a href="https://android-review.googlesource.com/#/q/I0a130bfa57713c96cc8b52c67becd32145526685">I0a130</a>
      ,
      <a href="https://issuetracker.google.com/issues/172938345">b/172938345</a>
      ,
      <a href="https://issuetracker.google.com/issues/175294473">b/175294473</a>
      )
    </li>
    <li>
      Easing has been changed to a functional interface (
      <a href="https://android-review.googlesource.com/#/q/Ib14e513b2c4b839287535bda19ae93375a4baa73">Ib14e5</a>
      )
    </li>
    <li>
      New
      <code translate="no" dir="ltr">items(count: Int)</code>
      factory method for scope of LazyColumn/LazyRow/LazyVerticalGrid.
      <code translate="no" dir="ltr">items(items: List)</code>
      and
      <code translate="no" dir="ltr">itemsIndexed(items: List)</code>
      are now extension functions so you have to manually import them when used. New extension overloads for Arrays: items(items: Array) and itemsIndexed(Array) (
      <a href="https://android-review.googlesource.com/#/q/I803fc5f25fac55855c710ff5064f11525f7b6010">I803fc</a>
      ,
      <a href="https://issuetracker.google.com/issues/175562574">b/175562574</a>
      )
    </li>
    <li>
      Leverage TestCoroutineDispatcher in testing (
      <a href="https://android-review.googlesource.com/#/q/I532b68e37ea6f72964fdcc267e397d285cffd9ad">I532b6</a>
      )
    </li>
    <li>
      Removed PointerInputData and modified PointerInputChange to give it all of PointerInputData's fields. Made PointerInputEvent and PointerInputEventData internal because they aren't used in any public API. (
      <a href="https://android-review.googlesource.com/#/q/Ifff970815031482a0ac1d5dab42a6156e10154b1">Ifff97</a>
      ,
      <a href="https://issuetracker.google.com/issues/175142755">b/175142755</a>
      )
    </li>
  </ul>
