libraryId: compose-foundation
groupId: androidx.compose
version: 1.6.0-alpha04
releaseDate: 2023-08-23
#language=html
changelogHtml: |
  <h3 id="1.6.0-alpha04" data-text="Version 1.6.0-alpha04" tabindex="-1">Version 1.6.0-alpha04</h3>
  <p>August 23, 2023</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.foundation:foundation-*:1.6.0-alpha04</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/5d7dd999525725bd038a00ca4e89e0fef624a6da..216f103fa4a5c7247f7bafc8bb3014616c265f0c/compose/foundation">Version 1.6.0-alpha04 contains these commits.</a>
  </p>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      Add
      <code translate="no" dir="ltr">ReusableComposition</code>
      interface for managing lifecycle and reuse of subcompositions. (
      <a href="https://android-review.googlesource.com/#/q/I812d1fa36791857a04471882d5edabea1400c15e">I812d1</a>
      ,
      <a href="https://issuetracker.google.com/issues/252846775">b/252846775</a>
      )
    </li>
    <li>
      <code translate="no" dir="ltr">Modifier.focusGroup</code>
      has been promoted to stable APIs. (
      <a href="https://android-review.googlesource.com/#/q/I7ffa30d82e2e382865fcd57f5ee7640959c087e2">I7ffa3</a>
      )
    </li>
    <li>
      Add overloads for
      <code translate="no" dir="ltr">BasicTextField2</code>
      that accept an immutable value and a callback to change that value, just like the current
      <code translate="no" dir="ltr">BasicTextField</code>
      API. (
      <a href="https://android-review.googlesource.com/#/q/I3f2b851e744fe2cd6f9c0c79e9f2ecbf35d2fdca">I3f2b8</a>
      )
    </li>
    <li>
      <code translate="no" dir="ltr">GridItemSpan::currentLineSpan</code>
      is now a stable API. (
      <a href="https://android-review.googlesource.com/#/q/Icc29c5af036d72c218cc4c630e166c4088209049">Icc29c</a>
      )
    </li>
    <li>
      Canvas that accepts
      <code translate="no" dir="ltr">contentDescription</code>
      is now a stable API. (
      <a href="https://android-review.googlesource.com/#/q/Ib3d2916e9521268daf351ad17dce8d6a35d57aa5">Ib3d29</a>
      )
    </li>
    <li>
      Introduced
      <code translate="no" dir="ltr">viewportSize</code>
      in
      <code translate="no" dir="ltr">ScrollState</code>
      , a way of knowing the
      <code translate="no" dir="ltr">viewPort</code>
      size of the component that uses
      <code translate="no" dir="ltr">ScrollState</code>
      after measuring happens. (
      <a href="https://android-review.googlesource.com/#/q/I8b85a0058db96f4b0eb5a6afa32e5293adaaeda5">I8b85a</a>
      ,
      <a href="https://issuetracker.google.com/issues/283102682">b/283102682</a>
      )
    </li>
    <li>
      Fixed an issue where the prefetching in Pager did not match the behavior in Views. (
      <a href="https://android-review.googlesource.com/#/q/I93352e6de29fa8bc23b3af7516872d3e2da7ce0e">I93352</a>
      ,
      <a href="https://issuetracker.google.com/issues/289088847">b/289088847</a>
      )
    </li>
    <li>
      <code translate="no" dir="ltr">Modifier.consumeWindowInsets(PaddingValues)</code>
      is now stable.
      <ul>
        <li>
          <code translate="no" dir="ltr">Deprecated Modifier.consumedWindowInsets</code>
          API is now removed. Use
          <code translate="no" dir="ltr">Modifier.consumeWindowInsets</code>
          instead. (
          <a href="https://android-review.googlesource.com/#/q/Id72bbe3b02da9e9c34295a963b9efd1ceed96e41">Id72bb</a>
          )
        </li>
      </ul>
    </li>
  </ul>
