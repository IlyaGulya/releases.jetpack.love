libraryId: concurrent
groupId: androidx.concurrent
version: 1.1.0-alpha01
releaseDate: 2019-12-18
#language=html
changelogHtml: |
  <h3 id="1.1.0-alpha01" data-text="Version 1.1.0-alpha01" tabindex="-1">Version 1.1.0-alpha01</h3>
  <p>December 18, 2019</p>
  <p>
    <code translate="no" dir="ltr">androidx.concurrent:concurrent-futures:1.1.0-alpha01</code>
    and
    <code translate="no" dir="ltr">androidx.concurrent:concurrent-futures-ktx:1.1.0-alpha01</code>
    are released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/631e6dd8dd3e57789af36d56a8d720da1c37cbd5..740cde70237dd276f8ad66dfe9528b1cdb5d54bb/concurrent">Version 1.1.0-alpha01 contains these commits</a>
    . This is first release of
    <code translate="no" dir="ltr">androidx.concurrent:concurrent-futures-ktx</code>
    .
  </p>
  <p><strong>New features</strong></p>
  <ul>
    <li>
      Kotlin extensions to help convert between ListenableFuture and Kotlin Coroutines are now available in
      <code translate="no" dir="ltr">concurrent-futures-ktx</code>
      . This artifact is meant to be used with
      <code translate="no" dir="ltr">com.google.guava:listenablefuture</code>
      as opposed to the full Guava library, which is a lightweight substitute for Guava that only contains
      <code translate="no" dir="ltr">ListenableFuture</code>
      . For users of the full Guava library, you should use the official ListenableFuture extensions from
      <code translate="no" dir="ltr">kotlinx.coroutines.kotlinx-coroutines-guava</code>
      instead.
    </li>
  </ul>
  <p><strong>API changes</strong></p>
  <ul>
    <li>
      Adds a suspending
      <code translate="no" dir="ltr">ListenableFuture.await()</code>
      extension which converts a ListenableFuture to a Kotlin Coroutine
    </li>
  </ul>
  <h2 id="version_100_3" data-text="Version 1.0.0" tabindex="-1">Version 1.0.0</h2>
