libraryId: fragment
groupId: androidx.fragment
version: 1.2.1
releaseDate: 2020-02-05
#language=html
changelogHtml: |
  <h3 id="1.2.1" data-text="Version 1.2.1" tabindex="-1">Version 1.2.1</h3>
  <p>February 5, 2020</p>
  <p>
    <code translate="no" dir="ltr">androidx.fragment:fragment:1.2.1</code>
    ,
    <code translate="no" dir="ltr">androidx.fragment:fragment-ktx:1.2.1</code>
    , and
    <code translate="no" dir="ltr">androidx.fragment:fragment-testing:1.2.1</code>
    are released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/905771170a6b905b05c195eb55273e8f0aade92b..b27fe92ff55203b778e3201a949a85c7c6c1bf76/fragment">Version 1.2.1 contains these commits</a>
    .
  </p>
  <p><strong>Bug fixes</strong></p>
  <ul>
    <li>
      Fragments added via the
      <code translate="no" dir="ltr">add</code>
      and
      <code translate="no" dir="ltr">replace</code>
      methods that take a
      <code translate="no" dir="ltr">Class</code>
      instance (or the Kotlin reified versions) now have their default constructor kept by ProGuard. (
      <a href="https://issuetracker.google.com/issues/148181315">b/148181315</a>
      )
    </li>
    <li>
      <code translate="no" dir="ltr">FragmentStatePagerAdapter</code>
      and
      <code translate="no" dir="ltr">FragmentPagerAdapter</code>
      no longer catch exceptions thrown by
      <code translate="no" dir="ltr">FragmentManager</code>
      when running
      <code translate="no" dir="ltr">finishUpdate()</code>
      . (
      <a href="https://android-review.googlesource.com/1208711/">aosp/1208711</a>
      )
    </li>
    <li>
      Fixed an issue where
      <code translate="no" dir="ltr">FragmentManager.findFragment()</code>
      did not work with fragments added via the
      <code translate="no" dir="ltr">&lt;fragment&gt;</code>
      tag. (
      <a href="https://issuetracker.google.com/issues/147784323">b/147784323</a>
      )
    </li>
    <li>
      Fragments inflated using the
      <code translate="no" dir="ltr">&lt;fragment&gt;</code>
      tag now always receive a call to
      <code translate="no" dir="ltr">onInflate()</code>
      before
      <code translate="no" dir="ltr">onCreate()</code>
      when in the layout. (
      <a href="https://android-review.googlesource.com/1215856/">aosp/1215856</a>
      )
    </li>
    <li>
      Calling
      <code translate="no" dir="ltr">toString()</code>
      on a
      <code translate="no" dir="ltr">FragmentManager</code>
      instance no longer throws a
      <code translate="no" dir="ltr">NullPointerException</code>
      when the Activity is already destroyed. (
      <a href="https://issuetracker.google.com/issues/148189412">b/148189412</a>
      )
    </li>
  </ul>
  <p><strong>Dependency changes</strong></p>
  <ul>
    <li>
      Fragments
      <code translate="no" dir="ltr">1.2.1</code>
      now depends on
      <a href="/jetpack/androidx/releases/lifecycle#viewmodel-savedstate-2.2.0">
        Lifecycle ViewModel SavedState
        <code translate="no" dir="ltr">2.2.0</code>
      </a>
      .
    </li>
  </ul>
  <h2 id="version_120_3" data-text="Version 1.2.0" tabindex="-1">Version 1.2.0</h2>
  <aside class="note">
    <strong>Note:</strong>
    <span>
      The Kotlin dependant libraries of this version (
      <code translate="no" dir="ltr">fragment-ktx</code>
      ,
      <code translate="no" dir="ltr">fragment-testing</code>
      ) target Java 8 programming language bytecode. Please read
      <a href="/studio/write/java8-support">Use Java 8 language features</a>
      to learn how to use it in your project.
    </span>
  </aside>
