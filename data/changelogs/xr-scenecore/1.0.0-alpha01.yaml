libraryId: xr-scenecore
groupId: androidx.xr
version: 1.0.0-alpha01
releaseDate: 2024-12-12
#language=html
changelogHtml: |
  <h3 id="1.0.0-alpha01" data-text="Version 1.0.0-alpha01" tabindex="-1">Version 1.0.0-alpha01</h3>
  <p>December 12, 2024</p>
  <p>
    <code translate="no" dir="ltr">androidx.xr.scenecore:scenecore-* 1.0.0-alpha01</code>
    is released.
  </p>
  <p>
    <strong>Features of Initial Release</strong>
    Initial developer release of Jetpack SceneCore, a 3D scene graph library for creating and manipulating immersive scenes and environments. This library allows you to place and arrange 3D models and content panels relative to each other and your virtual or real-world environments.
  </p>
  <ul>
    <li>
      <a href="/design/ui/xr/guides/environments">SpatialEnvironment</a>
      : Create fully immersive experiences with a skybox image and/or 3D model geometry as the backdrop for your XR scene of your environment. Or enable passthrough, so your virtual scene can integrate with the user’s real-world environment.
    </li>
    <li>
      <a href="/reference/kotlin/androidx/xr/scenecore/PanelEntity">PanelEntity</a>
      : Add 2D content to your 3D scenes by embedding standard Android layouts and Activities into spatialized panels that can float or be anchored to real-world surfaces.
    </li>
    <li>
      <a href="/reference/kotlin/androidx/xr/scenecore/GltfModelEntity">GltfModelEntity</a>
      : Place, animate, and interact with 3D models in your scene. SceneCore supports the glTF file format for ease of integration with existing models.
    </li>
    <li>
      <a href="/develop/xr/jetpack-xr-sdk/add-spatial-audio">SpatialAudio</a>
      : Add ambient and point audio sources into your 3D scene for fully immersive, spatialized sound.
    </li>
    <li>
      <a href="/reference/kotlin/androidx/xr/scenecore/StereoSurfaceEntity">StereoSurfaceEntity</a>
      : SceneCore supports left/right eye routing of content rendered onto an Android Surface. This can be used to render stereoscopic content in a side-by-side or top-bottom format, such as stereo photos, 3D video, or other dynamically rendered UIs. Applications should use MediaPlayer or ExoPlayer for video decoding.
    </li>
    <li>Component System: SceneCore offers a robust and flexible component system for adding capabilities to your XR content, including affordances for users to move, resize, and interact with models and panels.</li>
    <li>
      <a href="/reference/kotlin/androidx/xr/arcore/Anchor">Anchor</a>
      : With passthrough enabled, you can attach panels and models to actual surfaces, giving users seamless integration of virtual content in their real-world environment.
    </li>
    <li>User Pose: Access the user’s location in the virtual scene, to orient your content around the user’s position.</li>
    <li>
      <a href="/reference/kotlin/androidx/xr/scenecore/SpatialCapabilities">SpatialCapabilities</a>
      : Build fully adaptive apps that take advantage of spatialized capabilities when available, such as 3D positioning of UI content. Not only that, but your app can monitor for changes to capabilities while the app is executing, to modify the experience based on how the user is using their Android XR device.
    </li>
  </ul>
  <p><strong>Known Issues</strong></p>
  <ul>
    <li>
      Currently a minSDK of 30 is required to use Jetpack SceneCore. As a workaround add the following manifest entry
      <code translate="no" dir="ltr">&lt;uses-sdk tools:overrideLibrary="androidx.xr.scenecore, androidx.xr.compose"/&gt;</code>
      to be able to build and run with a minSDK of 23.
    </li>
    <li>
      Session can become invalid in various situations that automatically recreate the Activity, including resizing a main panel, connecting peripherals, and changing between light and dark mode. If you encounter session invalidation issues, workarounds include making you main panel non-resizable, using a dynamic panel entity,
      <a href="/guide/topics/resources/runtime-changes#restrict-activity">disabling activity recreation</a>
      for specific config changes or disabling light/dark mode theme changes.
    </li>
    <li>Movable and Resizable components are not supported on GltfEntity.</li>
    <li>Entity.getSize() is not supported on GltfEntity.</li>
    <li>
      Jetpack XR apps required to request
      <code translate="no" dir="ltr">android.permission.SCENE_UNDERSTANDING</code>
      permission in AndroidManifest.
    </li>
    <li>Creating a session is only supported on an Android XR device. At this time, if you create a Session and try to use it on a non Android XR device, you'll get a RuntimeException.</li>
    <li>Setting the skybox to null via `SpatialEnvironment.setSpatialEnvironmentPreference() does not result in a solid black skybox as documented. It may result in the system default skybox or no change to the current skybox.</li>
    <li>
      SceneCore clients should add
      <code translate="no" dir="ltr">implementation(“com.google.guava:listenablefuture-1.0”)</code>
      to their Gradle configuration for their app’s dependencies. In a future release, scenecore will include this library as an
      <code translate="no" dir="ltr">api</code>
      dependency so clients will not need to explicitly declare it.
    </li>
    <li>
      SceneCore erroneously includes
      <code translate="no" dir="ltr">com.google.guava:guava-31.1-android</code>
      and
      <code translate="no" dir="ltr">com.google.protobuf:protobuf-javalite</code>
      as transitive dependencies. If this results in duplicate class errors in your build, these two dependencies can be safely excluded.
    </li>
    <li>
      If your app uses SceneCore and enables ProGuard, it will crash when you create a Session. As a workaround, disable ProGuard. See
      <a href="/build/shrink-code">this guide</a>
      for more information on how to enable ProGuard.
    </li>
  </ul>
