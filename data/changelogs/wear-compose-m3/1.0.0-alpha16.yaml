libraryId: wear-compose-m3
groupId: androidx.wear
version: 1.0.0-alpha16
releaseDate: 2024-01-24
#language=html
changelogHtml: |
  <h3 id="1.0.0-alpha16" data-text="Version 1.0.0-alpha16" tabindex="-1">Version 1.0.0-alpha16</h3>
  <p>January 24, 2024</p>
  <p>
    <code translate="no" dir="ltr">androidx.wear.compose:compose-material3:1.0.0-alpha16</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/a8915c4ac4e4bfead52d6b42aaffaa87966ab38b..51191bc12f96f233fc08995e1b4e8ff8b88bc7ce/wear/compose/compose-material3">Version 1.0.0-alpha16 contains these commits.</a>
  </p>
  <p><strong>New Features</strong></p>
  <ul>
    <li>
      We have added
      <code translate="no" dir="ltr">CompactButton</code>
      , which can use the same filled, filled tonal and outlined colors as Button.(
      <a href="https://android-review.googlesource.com/#/q/I05df080969e73641c71515ef7ae7627fb93360d7">I05df0</a>
      )
    </li>
  </ul>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      We have added
      <code translate="no" dir="ltr">RadioButton</code>
      /
      <code translate="no" dir="ltr">SplitRadioButton</code>
      as containers for selection controls, such as the Radio control. This differs from the existing
      <code translate="no" dir="ltr">ToggleButton</code>
      in that
      <code translate="no" dir="ltr">RadioButton</code>
      is selectable (and operates within a selection group) whereas
      <code translate="no" dir="ltr">ToggleButton</code>
      is toggleable (and is independent). (
      <a href="https://android-review.googlesource.com/#/q/I612758b8625c45756e6a56d31c1008daac45fba3">I61275</a>
      )
    </li>
    <li>
      We are removing
      <code translate="no" dir="ltr">LocalContentAlpha</code>
      from the Wear Compose Material3 library for consistency with the Compose Material3 library. (
      <a href="https://android-review.googlesource.com/#/q/I49a0a24345a87de25aba78733c6351ede53c921d">I49a0a</a>
      )
    </li>
    <li>
      Wear material and wear material3 components exposing a
      <code translate="no" dir="ltr">MutableInteractionSource</code>
      in their API have been updated to now expose a nullable
      <code translate="no" dir="ltr">MutableInteractionSource</code>
      that defaults to null. There are no semantic changes here: passing null means that you do not wish to hoist the
      <code translate="no" dir="ltr">MutableInteractionSource</code>
      , and it will be created inside the component if needed. Changing to null allows for some components to never allocate a
      <code translate="no" dir="ltr">MutableInteractionSource</code>
      , and allows for other components to only lazily create an instance when they need to, which improves performance across these components. If you are not using the
      <code translate="no" dir="ltr">MutableInteractionSource</code>
      you pass to these components, it is recommended that you pass null instead. It is also recommended that you make similar changes in your own components. (
      <a href="https://android-review.googlesource.com/#/q/Ib90fc2736d2311e467d7c2a3fef4df757afaf525">Ib90fc</a>
      ,
      <a href="https://issuetracker.google.com/issues/298048146">b/298048146</a>
      )
    </li>
    <li>
      Adds new ripple API in
      <code translate="no" dir="ltr">wear:compose-material</code>
      and
      <code translate="no" dir="ltr">wear:compose-material3</code>
      libraries which replaces the deprecated
      <code translate="no" dir="ltr">rememberRipple</code>
      . Also adds a temporary
      <code translate="no" dir="ltr">CompositionLocal</code>
      ,
      <code translate="no" dir="ltr">LocalUseFallbackRippleImplementation</code>
      , to revert Material components to using the deprecated
      <code translate="no" dir="ltr">rememberRipple/RippleTheme</code>
      APIs. This will be removed in the next stable release, and is only intended to be a temporary migration aid for cases where you are providing a custom
      <code translate="no" dir="ltr">RippleTheme</code>
      . See developer.android.com for migration information and more background information behind this change. (
      <a href="https://android.googlesource.com/platform/frameworks/support/+/af92b215fa235f565a4b2e2612f195d67adf9a99">af92b21</a>
      )
    </li>
    <li>
      We have made minor improvements to the
      <code translate="no" dir="ltr">HorizontalPageIndicator</code>
      api and its documentation. (
      <a href="https://android-review.googlesource.com/#/q/I60efcf96f5260a27de394682c5df2ace50e67c93">I60efc</a>
      )
    </li>
    <li>
      We have updated
      <code translate="no" dir="ltr">ColorScheme</code>
      to be immutable, making individual color updates less efficient, but making more common usage of colors more efficient. The reasoning behind this change is that the majority of apps wouldn't have updating individual colors as a main use case. This is still possible but it will recompose more than before, in turn we significantly decrease the amount of state subscriptions through all of material code and will impact initialization and runtime cost of more standard use cases. (
      <a href="https://android-review.googlesource.com/#/q/Ibc2d6d36f4bdd817c06f686cd1e3c210c2544b82">Ibc2d6</a>
      )
    </li>
    <li>
      Updated
      <code translate="no" dir="ltr">ToggleButton</code>
      and
      <code translate="no" dir="ltr">SplitToggleButton</code>
      APIs to allow disabled colors to be customized. In addition, Material Design tokens are now used for color and typography values. (
      <a href="https://android-review.googlesource.com/#/q/If087ca889ffa3fce5fac10cc813551838b6cfd03">If087c</a>
      )
    </li>
    <li>
      Updated Button image background colors to use Material Design tokens. (
      <a href="https://android-review.googlesource.com/#/q/Iba21513fbc8f65a628cfa600785607db9f952bed">Iba215</a>
      )
    </li>
    <li>
      We have changed the
      <code translate="no" dir="ltr">Checkbox</code>
      ,
      <code translate="no" dir="ltr">Switch</code>
      and
      <code translate="no" dir="ltr">RadioButton</code>
      components to be display-only, by removing the click handling. These components are expected to be used in
      <code translate="no" dir="ltr">(Split)ToggleButton</code>
      which handles the click, so the components are now more clearly indicated as display-only (and are not intended for standalone use on Wear). (
      <a href="https://android-review.googlesource.com/#/q/I2322ed56b42d364dfaa98e7ba72ff62b4fb5b9c3">I2322e</a>
      )
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      We have added tokens for motion values of durations and easings in Wear Compose Material 3. (
      <a href="https://android-review.googlesource.com/#/q/I437cdff8bf33081b3d0930f4ca1d0631695cbb34">I437cd</a>
      )
    </li>
    <li>
      We have fixed a bug in the
      <code translate="no" dir="ltr">ToggleButton</code>
      ,
      <code translate="no" dir="ltr">SplitToggleButton</code>
      ,
      <code translate="no" dir="ltr">Checkbox</code>
      ,
      <code translate="no" dir="ltr">Switch</code>
      and
      <code translate="no" dir="ltr">RadioButton</code>
      so that accessibility announcements are not repeated (previously, semantic roles were duplicated). (
      <a href="https://android-review.googlesource.com/#/q/Ica281335ebabdf52577720e5cda72420adb90cbd">Ica281</a>
      )
    </li>
    <li>
      We have removed the materialcore layer for
      <code translate="no" dir="ltr">CompactButton</code>
      to improve performance. (
      <a href="https://android.googlesource.com/platform/frameworks/support/+/7902858b7a46c87a4f24f5da0111ed2a5d244bfc">7902858</a>
      )
    </li>
  </ul>
