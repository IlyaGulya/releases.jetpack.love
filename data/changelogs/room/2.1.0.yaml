libraryId: room
groupId: androidx.room
version: 2.1.0
releaseDate: 2019-06-13
#language=html
changelogHtml: |
  <h3 id="2.1.0" data-text="Version 2.1.0" tabindex="-1">Version 2.1.0</h3>
  <p>June 13, 2019</p>
  <p>
    Room 2.1.0 is released with no changes from
    <code translate="no" dir="ltr">2.1.0-rc01</code>
    . The commits included in the version can be found
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/c335f0223fafd3f8ce8658a472bc249d25992ff1..a0ad74d00bf98712b6d07b70214cac23154ff49c/room">here</a>
    .
  </p>
  <p><strong>Important changes since 2.0.0</strong></p>
  <ul>
    <li>
      <strong>FTS</strong>
      : Room now supports entities with a mapping
      <a href="https://www.sqlite.org/fts3.html">FTS3 or FTS4</a>
      table. Classes annotated with
      <code translate="no" dir="ltr">@Entity</code>
      can now be additionally annotated with
      <code translate="no" dir="ltr">@Fts3</code>
      or
      <code translate="no" dir="ltr">@Fts4</code>
      to declare a class with a mapping full-text search table. FTS options for further customization are available via the annotation’s methods.
    </li>
    <li>
      <strong>Views</strong>
      : Room now supports declaring a class as a stored query, also known as a
      <a href="https://www.sqlite.org/lang_createview.html">view</a>
      , using the
      <code translate="no" dir="ltr">@DatabaseView</code>
      annotation.
    </li>
    <li>
      <strong>Couroutines</strong>
      : DAO methods can now be suspend functions. Include
      <code translate="no" dir="ltr">room-ktx</code>
      in your dependencies to take advantage of this functionality. The ktx artifact also provides the extension function
      <code translate="no" dir="ltr">RoomDatabase.withTransaction</code>
      for performing database transactions within a coroutine.
    </li>
    <li>
      <strong>Auto Value</strong>
      : Room now supports declaring
      <a href="https://github.com/google/auto/blob/master/value/userguide/index.md">AutoValue</a>
      annotated classes as entities and POJOs. The Room annotations
      <code translate="no" dir="ltr">@PrimaryKey</code>
      ,
      <code translate="no" dir="ltr">@ColumnInfo</code>
      ,
      <code translate="no" dir="ltr">@Embedded</code>
      and
      <code translate="no" dir="ltr">@Relation</code>
      can now be declared in an auto value annotated class’s abstract methods. Note that these annotation must also be accompanied by
      <code translate="no" dir="ltr">@CopyAnnotations</code>
      for Room to properly understand them.
    </li>
    <li>
      <strong>Additional Async Support</strong>
      : DAO methods annotated with
      <code translate="no" dir="ltr">@Insert</code>
      ,
      <code translate="no" dir="ltr">@Delete</code>
      or
      <code translate="no" dir="ltr">@Update</code>
      , along with
      <code translate="no" dir="ltr">@Query</code>
      containing
      <code translate="no" dir="ltr">INSERT</code>
      ,
      <code translate="no" dir="ltr">DELETE</code>
      or
      <code translate="no" dir="ltr">UPDATE</code>
      statements, now support Rx return types
      <code translate="no" dir="ltr">Completable</code>
      ,
      <code translate="no" dir="ltr">Single</code>
      ,
      <code translate="no" dir="ltr">Maybe</code>
      , and Guava's return type
      <code translate="no" dir="ltr">ListenableFuture</code>
      , and they can also be suspend functions.
    </li>
    <li>
      <code translate="no" dir="ltr">enableMultiInstanceInvalidation</code>
      is a new API in
      <code translate="no" dir="ltr">RoomDatabase.Builder</code>
      to enable invalidation across multiple instances of RoomDatabase using the same database file.
    </li>
    <li>
      <code translate="no" dir="ltr">fallbackToDestructiveMigrationOnDowngrade</code>
      is a new API in
      <code translate="no" dir="ltr">RoomDatabase.Builder</code>
      to automatically re-create the database if a downgrade happens.
    </li>
    <li>
      <code translate="no" dir="ltr">ignoredColumns</code>
      is a new API in the
      <code translate="no" dir="ltr">@Entity</code>
      annotation that can be used to list ignored fields by name.
    </li>
    <li>
      Room will now properly use Kotlin’s primary constructor in data classes avoiding the need to declare the properties as
      <code translate="no" dir="ltr">vars</code>
      .
    </li>
  </ul>
