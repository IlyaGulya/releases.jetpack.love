libraryId: media3
groupId: androidx.media3
version: 1.6.0-beta01
releaseDate: 2025-02-26
#language=html
changelogHtml: |
  <h3 id="1.6.0-beta01" data-text="1.6.0-beta01" tabindex="-1">1.6.0-beta01</h3>
  <p>February 26, 2025</p>
  <p>
    <code translate="no" dir="ltr">androidx.media3:media3-*:1.6.0-beta01</code>
    is released. Version 1.6.0-beta01 contains
    <a href="https://github.com/androidx/media/commits/1.6.0-beta01">these commits</a>
    .
  </p>
  <ul>
    <li>
      Common Library:
      <ul>
        <li>Upgrade Kotlin from 1.9.20 to 2.0.20 and use Compose Compiler Gradle plugin. Upgrade KotlinX Coroutines library from 1.8.1 to 1.9.0.</li>
      </ul>
    </li>
    <li>
      ExoPlayer:
      <ul>
        <li>
          Initial audio session ID is no longer immediately available after creating the player. You can use
          <code translate="no" dir="ltr">AnalyticsListener.onAudioSessionIdChanged</code>
          to listen to the initial update if required.
        </li>
      </ul>
    </li>
    <li>
      Transformer:
      <ul>
        <li>
          Add
          <code translate="no" dir="ltr">MediaProjectionAssetLoader</code>
          , which provides media from a
          <code translate="no" dir="ltr">MediaProjection</code>
          for screen recording, and add support for screen recording to the Transformer demo app.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">#getInputFormat()</code>
          to
          <code translate="no" dir="ltr">Codec</code>
          interface.
        </li>
        <li>
          Shift the responsibility to release the
          <code translate="no" dir="ltr">GlObjectsProvider</code>
          onto the caller in
          <code translate="no" dir="ltr">DefaultVideoFrameProcessor</code>
          and
          <code translate="no" dir="ltr">DefaultVideoCompositor</code>
          when possible.
        </li>
      </ul>
    </li>
    <li>
      Video:
      <ul>
        <li>
          Add experimental
          <code translate="no" dir="ltr">ExoPlayer</code>
          API to drop late
          <code translate="no" dir="ltr">MediaCodecVideoRenderer</code>
          decoder input buffers that are not depended on. Enable it with
          <code translate="no" dir="ltr">DefaultRenderersFactory.experimentalSetLateThresholdToDropDecoderInputUs</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Session:
      <ul>
        <li>
          Keep foreground service state for an additional 10 minutes when playback pauses, stops or fails. This allows users to resume playback within this timeout without risking foreground service restrictions on various devices. Note that calling
          <code translate="no" dir="ltr">player.pause()</code>
          can no longer be used to stop the foreground service before
          <code translate="no" dir="ltr">stopSelf()</code>
          when overriding
          <code translate="no" dir="ltr">onTaskRemoved</code>
          , use
          <code translate="no" dir="ltr">MediaSessionService.pauseAllPlayersAndStopSelf()</code>
          instead.
        </li>
        <li>Keep notification visible when playback enters an error or stopped state. The notification is only removed if the playlist is cleared or the player is released.</li>
        <li>Improve handling of Android platform MediaSession actions ACTION_PLAY and ACTION_PAUSE to only set one of them according to the available commands and also accept if only one of them is set.</li>
      </ul>
    </li>
    <li>
      Remove deprecated symbols:
      <ul>
        <li>
          Removed the following deprecated
          <code translate="no" dir="ltr">DownloadHelper</code>
          methods:
          <ul>
            <li>
              Constructor
              <code translate="no" dir="ltr">DownloadHelper(MediaItem, @Nullable MediaSource, TrackSelectionParameters, RendererCapabilities[])</code>
              , use
              <code translate="no" dir="ltr">DownloadHelper(MediaItem, @Nullable MediaSource, TrackSelectionParameters, RendererCapabilitiesList)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">getRendererCapabilities(RenderersFactory)</code>
              , equivalent behavior can be achieved by creating a
              <code translate="no" dir="ltr">DefaultRendererCapabilitiesList</code>
              with a
              <code translate="no" dir="ltr">RenderersFactory</code>
              , and calling
              <code translate="no" dir="ltr">DefaultRendererCapabilitiesList.getRendererCapabilities()</code>
              .
            </li>
          </ul>
        </li>
        <li>
          Removed
          <code translate="no" dir="ltr">PlayerNotificationManager.setMediaSessionToken(MediaSessionCompat)</code>
          method. Use
          <code translate="no" dir="ltr">PlayerNotificationManager.setMediaSessionToken(MediaSession.Token)</code>
          and pass in
          <code translate="no" dir="ltr">(MediaSession.Token) compatToken.getToken()</code>
          instead.
        </li>
      </ul>
    </li>
  </ul>
