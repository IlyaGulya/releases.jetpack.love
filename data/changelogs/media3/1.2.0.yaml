libraryId: media3
groupId: androidx.media3
version: 1.2.0
releaseDate: 2023-11-15
#language=html
changelogHtml: |
  <h3 id="1.2.0" data-text="Version 1.2.0" tabindex="-1">Version 1.2.0</h3>
  <p>November 15, 2023</p>
  <ul>
    <li>
      Common Library:
      <ul>
        <li>
          Add a
          <code translate="no" dir="ltr">@Nullable Throwable</code>
          parameter to the methods in the
          <code translate="no" dir="ltr">Log.Logger</code>
          interface. The
          <code translate="no" dir="ltr">message</code>
          parameter to these methods no longer contains any information about the
          <code translate="no" dir="ltr">Throwable</code>
          passed to the
          <code translate="no" dir="ltr">Log.{d,i,w,e}()</code>
          methods, so implementations will need to manually append this information if desired (possibly using
          <code translate="no" dir="ltr">Logger.appendThrowableString(String, Throwable)</code>
          ).
        </li>
        <li>
          Fix Kotlin compatibility issue where nullable generic type parameters and nullable array element types are not detected as nullable. Examples are
          <code translate="no" dir="ltr">TrackSelectorResult</code>
          and
          <code translate="no" dir="ltr">SimpleDecoder</code>
          method parameters (
          <a href="https://github.com/google/ExoPlayer/issues/6792">#6792</a>
          ).
        </li>
        <li>
          Change default UI and notification behavior in
          <code translate="no" dir="ltr">Util.shouldShowPlayButton</code>
          to show a "play" button while playback is temporarily suppressed (e.g. due to transient audio focus loss). The legacy behavior can be maintained by using
          <code translate="no" dir="ltr">PlayerView.setShowPlayButtonIfPlaybackIsSuppressed(false)</code>
          or
          <code translate="no" dir="ltr">MediaSession.Builder.setShowPlayButtonIfPlaybackIsSuppressed(false)</code>
          (
          <a href="https://github.com/google/ExoPlayer/issues/11213">#11213</a>
          ).
        </li>
        <li>
          Upgrade
          <code translate="no" dir="ltr">androidx.annotation:annotation-experimental</code>
          to
          <code translate="no" dir="ltr">1.3.1</code>
          to fix https://issuetracker.google.com/251172715.
        </li>
        <li>
          Move
          <code translate="no" dir="ltr">ExoPlayer.setAudioAttributes</code>
          to the
          <code translate="no" dir="ltr">Player</code>
          interface.
        </li>
      </ul>
    </li>
    <li>
      ExoPlayer:
      <ul>
        <li>
          Fix seeking issues in AC4 streams caused by not identifying decode-only samples correctly (
          <a href="https://github.com/google/ExoPlayer/issues/11000">#11000</a>
          ).
        </li>
        <li>
          Add suppression of playback on unsuitable audio output devices (e.g. the built-in speaker on Wear OS devices) when this feature is enabled via
          <code translate="no" dir="ltr">ExoPlayer.Builder.setSuppressPlaybackOnUnsuitableOutput</code>
          . The playback suppression reason will be updated as
          <code translate="no" dir="ltr">Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT</code>
          if playback is attempted when no suitable audio outputs are available, or if all suitable outputs are disconnected during playback. The suppression reason will be removed when a suitable output is connected.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">MediaSource.canUpdateMediaItem</code>
          and
          <code translate="no" dir="ltr">MediaSource.updateMediaItem</code>
          to accept
          <code translate="no" dir="ltr">MediaItem</code>
          updates after creation via
          <code translate="no" dir="ltr">Player.replaceMediaItem(s)</code>
          .
        </li>
        <li>
          Allow
          <code translate="no" dir="ltr">MediaItem</code>
          updates for all
          <code translate="no" dir="ltr">MediaSource</code>
          classes provided by the library via
          <code translate="no" dir="ltr">Player.replaceMediaItem(s)</code>
          (
          <a href="https://github.com/androidx/media/issues/33">#33</a>
          ,
          <a href="https://github.com/google/ExoPlayer/issues/9978">#9978</a>
          ).
        </li>
        <li>
          Rename
          <code translate="no" dir="ltr">MimeTypes.TEXT_EXOPLAYER_CUES</code>
          to
          <code translate="no" dir="ltr">MimeTypes.APPLICATION_MEDIA3_CUES</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">PngExtractor</code>
          that sends and reads a whole PNG file into the
          <code translate="no" dir="ltr">TrackOutput</code>
          as one sample.
        </li>
        <li>
          Enhance
          <code translate="no" dir="ltr">SequenceableLoader.continueLoading(long)</code>
          method in the
          <code translate="no" dir="ltr">SequenceableLoader</code>
          interface to
          <code translate="no" dir="ltr">SequenceableLoader.continueLoading(LoadingInfo loadingInfo)</code>
          .
          <code translate="no" dir="ltr">LoadingInfo</code>
          contains additional parameters, including
          <code translate="no" dir="ltr">playbackSpeed</code>
          and
          <code translate="no" dir="ltr">lastRebufferRealtimeMs</code>
          in addition to the existing
          <code translate="no" dir="ltr">playbackPositionUs</code>
          .
        </li>
        <li>
          Enhance
          <code translate="no" dir="ltr">ChunkSource.getNextChunk(long, long, List, ChunkHolder)</code>
          method in the
          <code translate="no" dir="ltr">ChunkSource</code>
          interface to
          <code translate="no" dir="ltr">ChunkSource.getNextChunk(LoadingInfo, long, List, ChunkHolder)</code>
          .
        </li>
        <li>
          Add additional fields to Common Media Client Data (CMCD) logging: buffer starvation (
          <code translate="no" dir="ltr">bs</code>
          ), deadline (
          <code translate="no" dir="ltr">dl</code>
          ), playback rate (
          <code translate="no" dir="ltr">pr</code>
          ) and startup (
          <code translate="no" dir="ltr">su</code>
          ) (
          <a href="https://github.com/google/ExoPlayer/issues/8699">#8699</a>
          ).
        </li>
        <li>
          Add luma and chroma bitdepth to
          <code translate="no" dir="ltr">ColorInfo</code>
          (
          <a href="https://github.com/androidx/media/pull/491">#491</a>
          ).
        </li>
        <li>
          Add additional fields to Common Media Client Data (CMCD) logging: next object request (
          <code translate="no" dir="ltr">nor</code>
          ) and next range request (
          <code translate="no" dir="ltr">nrr</code>
          ) (
          <a href="https://github.com/google/ExoPlayer/issues/8699">#8699</a>
          ).
        </li>
        <li>
          Add functionality to transmit Common Media Client Data (CMCD) data using query parameters (
          <a href="https://github.com/androidx/media/issues/553">#553</a>
          ).
        </li>
        <li>
          Fix
          <code translate="no" dir="ltr">ConcurrentModificationException</code>
          in
          <code translate="no" dir="ltr">ExperimentalBandwidthMeter</code>
          (
          <a href="https://github.com/androidx/media/issues/612">#612</a>
          ).
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">MediaPeriodId</code>
          parameter to
          <code translate="no" dir="ltr">CompositeMediaSource.getMediaTimeForChildMediaTime</code>
          .
        </li>
        <li>
          Support
          <code translate="no" dir="ltr">ClippingMediaSource</code>
          (and other sources with period/window time offsets) in
          <code translate="no" dir="ltr">ConcatenatingMediaSource2</code>
          (
          <a href="https://github.com/google/ExoPlayer/issues/11226">#11226</a>
          ).
        </li>
        <li>
          Change
          <code translate="no" dir="ltr">BaseRenderer.onStreamChanged()</code>
          to also receive a
          <code translate="no" dir="ltr">MediaPeriodId</code>
          argument.
        </li>
      </ul>
    </li>
    <li>
      Transformer:
      <ul>
        <li>Parse EXIF rotation data for image inputs.</li>
        <li>
          Remove
          <code translate="no" dir="ltr">TransformationRequest.HdrMode</code>
          annotation type and its associated constants. Use
          <code translate="no" dir="ltr">Composition.HdrMode</code>
          and its associated constants instead.
        </li>
        <li>
          Simplify the
          <code translate="no" dir="ltr">OverlaySettings</code>
          to fix rotation issues.
        </li>
        <li>
          Changed
          <code translate="no" dir="ltr">frameRate</code>
          and
          <code translate="no" dir="ltr">durationUs</code>
          parameters of
          <code translate="no" dir="ltr">SampleConsumer.queueInputBitmap</code>
          to
          <code translate="no" dir="ltr">TimestampIterator</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Track Selection:
      <ul>
        <li>
          Add
          <code translate="no" dir="ltr">DefaultTrackSelector.Parameters.allowAudioNonSeamlessAdaptiveness</code>
          to explicitly allow or disallow non-seamless adaptation. The default stays at its current behavior of
          <code translate="no" dir="ltr">true</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Extractors:
      <ul>
        <li>
          MPEG-TS: Ensure the last frame is rendered by passing the last access unit of a stream to the sample queue (
          <a href="https://github.com/google/ExoPlayer/issues/7909">#7909</a>
          ).
        </li>
        <li>
          Fix typo when determining
          <code translate="no" dir="ltr">rotationDegrees</code>
          . Changed
          <code translate="no" dir="ltr">projectionPosePitch</code>
          to
          <code translate="no" dir="ltr">projectionPoseRoll</code>
          (
          <a href="https://github.com/androidx/media/pull/461">#461</a>
          ).
        </li>
        <li>
          Remove the assumption that
          <code translate="no" dir="ltr">Extractor</code>
          instances can be directly inspected with
          <code translate="no" dir="ltr">instanceof</code>
          . If you want runtime access to the implementation details of an
          <code translate="no" dir="ltr">Extractor</code>
          you must first call
          <code translate="no" dir="ltr">Extractor.getUnderlyingInstance</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">BmpExtractor</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">WebpExtractor</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">HeifExtractor</code>
          .
        </li>
        <li>
          Add
          <a href="https://developer.apple.com/standards/qtff-2001.pdf">QuickTime classic</a>
          support to
          <code translate="no" dir="ltr">Mp4Extractor</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Audio:
      <ul>
        <li>
          Add support for 24/32-bit big-endian PCM in MP4 and Matroska, and parse PCM encoding for
          <code translate="no" dir="ltr">lpcm</code>
          in MP4.
        </li>
        <li>Add support for extracting Vorbis audio in MP4.</li>
        <li>
          Add
          <code translate="no" dir="ltr">AudioSink.getFormatOffloadSupport(Format)</code>
          that retrieves level of offload support the sink can provide for the format through a
          <code translate="no" dir="ltr">DefaultAudioOffloadSupportProvider</code>
          . It returns the new
          <code translate="no" dir="ltr">AudioOffloadSupport</code>
          that contains
          <code translate="no" dir="ltr">isFormatSupported</code>
          ,
          <code translate="no" dir="ltr">isGaplessSupported</code>
          , and
          <code translate="no" dir="ltr">isSpeedChangeSupported</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">AudioSink.setOffloadMode()</code>
          through which the offload configuration on the audio sink is configured. Default is
          <code translate="no" dir="ltr">AudioSink.OFFLOAD_MODE_DISABLED</code>
          .
        </li>
        <li>
          Offload can be enabled through
          <code translate="no" dir="ltr">setAudioOffloadPreference</code>
          in
          <code translate="no" dir="ltr">TrackSelectionParameters</code>
          . If the set preference is to enable, the device supports offload for the format, and the track selection is a single audio track, then audio offload will be enabled.
        </li>
        <li>
          If
          <code translate="no" dir="ltr">audioOffloadModePreference</code>
          is set to
          <code translate="no" dir="ltr">AUDIO_OFFLOAD_MODE_PREFERENCE_REQUIRED</code>
          , then the
          <code translate="no" dir="ltr">DefaultTrackSelector</code>
          will only select an audio track and only if that track's format is supported in offload. If no audio track is supported in offload, then no track will be selected.
        </li>
        <li>Disabling gapless support for offload when pre-API level 33 due to playback position issue after track transition.</li>
        <li>
          Remove parameter
          <code translate="no" dir="ltr">enableOffload</code>
          from
          <code translate="no" dir="ltr">DefaultRenderersFactory.buildAudioSink</code>
          method signature.
        </li>
        <li>
          Remove method
          <code translate="no" dir="ltr">DefaultAudioSink.Builder.setOffloadMode</code>
          .
        </li>
        <li>
          Remove intdef value
          <code translate="no" dir="ltr">DefaultAudioSink.OffloadMode.OFFLOAD_MODE_ENABLED_GAPLESS_DISABLED</code>
          .
        </li>
        <li>Add support for Opus gapless metadata during offload playback.</li>
        <li>
          Allow renderer recovery by disabling offload if failed at first write (
          <a href="https://github.com/androidx/media/issues/627">#627</a>
          ).
        </li>
        <li>Enable Offload Scheduling by default for audio-only offloaded playback.</li>
        <li>
          Delete
          <code translate="no" dir="ltr">ExoPlayer.experimentalSetOffloadSchedulingEnabled</code>
          and
          <code translate="no" dir="ltr">AudioOffloadListener.onExperimentalOffloadSchedulingEnabledChanged</code>
          .
        </li>
        <li>
          Renamed
          <code translate="no" dir="ltr">onExperimentalSleepingForOffloadChanged</code>
          as
          <code translate="no" dir="ltr">onSleepingForOffloadChanged</code>
          and
          <code translate="no" dir="ltr">onExperimentalOffloadedPlayback</code>
          as
          <code translate="no" dir="ltr">onOffloadedPlayback</code>
          .
        </li>
        <li>
          Move audio offload mode related
          <code translate="no" dir="ltr">TrackSelectionParameters</code>
          interfaces and definitions to an inner
          <code translate="no" dir="ltr">AudioOffloadPreferences</code>
          class.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">onAudioTrackInitialized</code>
          and
          <code translate="no" dir="ltr">onAudioTrackReleased</code>
          callbacks to
          <code translate="no" dir="ltr">AnalyticsListener</code>
          ,
          <code translate="no" dir="ltr">AudioRendererEventListener</code>
          and
          <code translate="no" dir="ltr">AudioSink.Listener</code>
          .
        </li>
        <li>
          Fix DTS Express audio buffer underflow issue (
          <a href="https://github.com/androidx/media/pull/650">#650</a>
          ).
        </li>
        <li>
          Fix bug where the capabilities check for E-AC3-JOC throws an
          <code translate="no" dir="ltr">IllegalArgumentException</code>
          (
          <a href="https://github.com/androidx/media/issues/677">#677</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Video:
      <ul>
        <li>
          Allow
          <code translate="no" dir="ltr">MediaCodecVideoRenderer</code>
          to use a custom
          <code translate="no" dir="ltr">VideoFrameProcessor.Factory</code>
          .
        </li>
        <li>
          Fix bug where the first frame couldn't be rendered if the audio stream starts with negative timestamps (
          <a href="https://github.com/androidx/media/issues/291">#291</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Text:
      <ul>
        <li>
          Remove
          <code translate="no" dir="ltr">ExoplayerCuesDecoder</code>
          . Text tracks with
          <code translate="no" dir="ltr">sampleMimeType = application/x-media3-cues</code>
          are now directly handled by
          <code translate="no" dir="ltr">TextRenderer</code>
          without needing a
          <code translate="no" dir="ltr">SubtitleDecoder</code>
          instance.
        </li>
      </ul>
    </li>
    <li>
      Metadata:
      <ul>
        <li>
          <code translate="no" dir="ltr">MetadataDecoder.decode</code>
          will no longer be called for "decode-only" samples as the implementation must return null anyway.
        </li>
      </ul>
    </li>
    <li>
      Effect:
      <ul>
        <li>
          Add
          <code translate="no" dir="ltr">VideoFrameProcessor.queueInputBitmap(Bitmap, Iterator&lt;Long&gt;)</code>
          queuing bitmap input by timestamp.
        </li>
        <li>
          Change
          <code translate="no" dir="ltr">VideoFrameProcessor.registerInputStream()</code>
          to be non-blocking. Apps must implement
          <code translate="no" dir="ltr">VideoFrameProcessor.Listener#onInputStreamRegistered()</code>
          .
        </li>
        <li>
          Changed
          <code translate="no" dir="ltr">frameRate</code>
          and
          <code translate="no" dir="ltr">durationUs</code>
          parameters of
          <code translate="no" dir="ltr">VideoFrameProcessor.queueInputBitmap</code>
          to
          <code translate="no" dir="ltr">TimestampIterator</code>
          .
        </li>
      </ul>
    </li>
    <li>
      IMA extension:
      <ul>
        <li>
          Fix bug where a multi-period DASH live stream that is not the first item in a playlist can throw an exception (
          <a href="https://github.com/androidx/media/issues/571">#571</a>
          ).
        </li>
        <li>
          Release StreamManager before calling
          <code translate="no" dir="ltr">AdsLoader.destroy()</code>
        </li>
        <li>Bump IMA SDK version to 3.31.0.</li>
      </ul>
    </li>
    <li>
      Session:
      <ul>
        <li>
          Set the notifications foreground service behavior to
          <code translate="no" dir="ltr">FOREGROUND_SERVICE_IMMEDIATE</code>
          in
          <code translate="no" dir="ltr">DefaultMediaNotificationProvider</code>
          (
          <a href="https://github.com/androidx/media/issues/167">#167</a>
          ).
        </li>
        <li>
          Use only
          <code translate="no" dir="ltr">android.media.session.MediaSession.setMediaButtonBroadcastReceiver()</code>
          above API 31 to avoid problems with deprecated API on Samsung devices (
          <a href="https://github.com/androidx/media/issues/167">#167</a>
          ).
        </li>
        <li>Use the media notification controller as proxy to set available commands and custom layout used to populate the notification and the platform session.</li>
        <li>
          Convert media button events that are received by
          <code translate="no" dir="ltr">MediaSessionService.onStartCommand()</code>
          within Media3 instead of routing them to the platform session and back to Media3. With this, the caller controller is always the media notification controller and apps can easily recognize calls coming from the notification in the same way on all supported API levels.
        </li>
        <li>
          Fix bug where
          <code translate="no" dir="ltr">MediaController.getCurrentPosition()</code>
          is not advancing when connected to a legacy
          <code translate="no" dir="ltr">MediaSessionCompat</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">MediaLibrarySession.getSubscribedControllers(mediaId)</code>
          for convenience.
        </li>
        <li>
          Override
          <code translate="no" dir="ltr">MediaLibrarySession.Callback.onSubscribe()</code>
          to assert the availability of the parent ID for which the controller subscribes. If successful, the subscription is accepted and
          <code translate="no" dir="ltr">notifyChildrenChanged()</code>
          is called immediately to inform the browser (
          <a href="https://github.com/androidx/media/issues/561">#561</a>
          ).
        </li>
        <li>Add session demo module for Automotive OS and enable session demo for Android Auto.</li>
        <li>
          Do not set the queue of the framework session when
          <code translate="no" dir="ltr">COMMAND_GET_TIMELINE</code>
          is not available for the media notification controller. With Android Auto as the client controller reading from the framework session, this has the effect that the
          <code translate="no" dir="ltr">queue</code>
          button in the UI of Android Auto is not displayed (
          <a href="https://github.com/androidx/media/issues/339">#339</a>
          ).
        </li>
        <li>
          Use
          <code translate="no" dir="ltr">DataSourceBitmapLoader</code>
          by default instead of
          <code translate="no" dir="ltr">SimpleBitmapLoader</code>
          (
          <a href="https://github.com/androidx/media/issues/271">#271</a>
          ,
          <a href="https://github.com/androidx/media/issues/327">#327</a>
          ).
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">MediaSession.Callback.onMediaButtonEvent(Intent)</code>
          that allows apps to override the default media button event handling.
        </li>
      </ul>
    </li>
    <li>
      UI:
      <ul>
        <li>
          Add a
          <code translate="no" dir="ltr">Player.Listener</code>
          implementation for Wear OS devices that handles playback suppression due to
          <code translate="no" dir="ltr">Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT</code>
          by launching a system dialog to allow a user to connect a suitable audio output (e.g. bluetooth headphones). The listener will auto-resume playback if a suitable device is connected within a configurable timeout (default is 5 minutes).
        </li>
      </ul>
    </li>
    <li>
      Downloads:
      <ul>
        <li>
          Declare "data sync" foreground service type for
          <code translate="no" dir="ltr">DownloadService</code>
          for Android 14 compatibility. When using this service, the app also needs to add
          <code translate="no" dir="ltr">dataSync</code>
          as
          <code translate="no" dir="ltr">foregroundServiceType</code>
          in the manifest and add the
          <code translate="no" dir="ltr">FOREGROUND_SERVICE_DATA_SYNC</code>
          permission (
          <a href="https://github.com/google/ExoPlayer/issues/11239">#11239</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      HLS Extension:
      <ul>
        <li>
          Refresh the HLS live playlist with an interval calculated from the last load start time rather than the last load completed time (
          <a href="https://github.com/androidx/media/issues/663">#663</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      DASH Extension:
      <ul>
        <li>Allow multiple of the same DASH identifier in segment template URL.</li>
        <li>
          Add experimental support for parsing subtitles during extraction. This has better support for merging overlapping subtitles, including resolving flickering when transitioning between subtitle segments. You can enable this using
          <code translate="no" dir="ltr">DashMediaSource.Factory.experimentalParseSubtitlesDuringExtraction()</code>
          (
          <a href="https://github.com/androidx/media/issues/288">#288</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      RTSP Extension:
      <ul>
        <li>
          Fix a race condition that could lead to
          <code translate="no" dir="ltr">IndexOutOfBoundsException</code>
          when falling back to TCP, or playback hanging in some situations.
        </li>
        <li>
          Check state in RTSP setup when returning loading state of
          <code translate="no" dir="ltr">RtspMediaPeriod</code>
          (
          <a href="https://github.com/androidx/media/issues/577">#577</a>
          ).
        </li>
        <li>
          Ignore custom Rtsp request methods in Options response public header (
          <a href="https://github.com/androidx/media/issues/613">#613</a>
          ).
        </li>
        <li>
          Use RTSP Setup Response timeout value in time interval of sending keep-alive RTSP Options requests (
          <a href="https://github.com/androidx/media/issues/662">#662</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Decoder Extensions (FFmpeg, VP9, AV1, MIDI, etc.):
      <ul>
        <li>Release the MIDI decoder module, which provides support for playback of standard MIDI files using the Jsyn library to synthesize audio.</li>
        <li>
          Add
          <code translate="no" dir="ltr">DecoderOutputBuffer.shouldBeSkipped</code>
          to directly mark output buffers that don't need to be presented. This is preferred over
          <code translate="no" dir="ltr">C.BUFFER_FLAG_DECODE_ONLY</code>
          that will be deprecated.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">Decoder.setOutputStartTimeUs</code>
          and
          <code translate="no" dir="ltr">SimpleDecoder.isAtLeastOutputStartTimeUs</code>
          to allow decoders to drop decode-only samples before the start time. This should be preferred to
          <code translate="no" dir="ltr">Buffer.isDecodeOnly</code>
          that will be deprecated.
        </li>
        <li>
          Fix bug publishing MIDI decoder artifact to Maven repository. The artifact is renamed to
          <code translate="no" dir="ltr">media3-exoplayer-midi</code>
          (
          <a href="https://github.com/androidx/media/issues/734">#734</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Leanback extension:
      <ul>
        <li>
          Fix bug where disabling a surface can cause an
          <code translate="no" dir="ltr">ArithmeticException</code>
          in Leanback code (
          <a href="https://github.com/androidx/media/issues/617">#617</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Test Utilities:
      <ul>
        <li>
          Make
          <code translate="no" dir="ltr">TestExoPlayerBuilder</code>
          and
          <code translate="no" dir="ltr">FakeClock</code>
          compatible with Espresso UI tests and Compose UI tests. This fixes a bug where playback advances non-deterministically during Espresso or Compose view interactions.
        </li>
      </ul>
    </li>
    <li>
      Remove deprecated symbols:
      <ul>
        <li>
          Remove
          <code translate="no" dir="ltr">TransformationRequest.Builder.setEnableRequestSdrToneMapping(boolean)</code>
          and
          <code translate="no" dir="ltr">TransformationRequest.Builder.experimental_setEnableHdrEditing(boolean)</code>
          . Use
          <code translate="no" dir="ltr">Composition.Builder.setHdrMode(int)</code>
          and pass the
          <code translate="no" dir="ltr">Composition</code>
          to
          <code translate="no" dir="ltr">Transformer.start(Composition, String)</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">DownloadNotificationHelper.buildProgressNotification</code>
          method, use a non deprecated method that takes a
          <code translate="no" dir="ltr">notMetRequirements</code>
          parameter instead.
        </li>
      </ul>
    </li>
  </ul>
