libraryId: media3
groupId: androidx.media3
version: 1.6.0
releaseDate: 2025-03-26
#language=html
changelogHtml: |
  <h3 id="1.6.0" data-text="1.6.0" tabindex="-1">1.6.0</h3>
  <p>March 26, 2025</p>
  <p>
    <code translate="no" dir="ltr">androidx.media3:media3-*:1.6.0</code>
    is released. Version 1.6.0 contains
    <a href="https://github.com/androidx/media/commits/1.6.0">these commits</a>
    .
  </p>
  <ul>
    <li>
      Common Library:
      <ul>
        <li>
          Add
          <code translate="no" dir="ltr">AudioManagerCompat</code>
          and
          <code translate="no" dir="ltr">AudioFocusRequestCompat</code>
          to replace the equivalent classes in
          <code translate="no" dir="ltr">androidx.media</code>
          .
        </li>
        <li>Upgrade Kotlin from 1.9.20 to 2.0.20 and use Compose Compiler Gradle plugin. Upgrade KotlinX Coroutines library from 1.8.1 to 1.9.0.</li>
        <li>
          Remove
          <code translate="no" dir="ltr">Format.toBundle(boolean excludeMetadata)</code>
          method, use
          <code translate="no" dir="ltr">Format.toBundle()</code>
          instead.
        </li>
        <li>
          Fix bug in
          <code translate="no" dir="ltr">SimpleBasePlayer</code>
          where setting a new
          <code translate="no" dir="ltr">currentMediaItemIndex</code>
          in
          <code translate="no" dir="ltr">State</code>
          after
          <code translate="no" dir="ltr">setPlaylist</code>
          with
          <code translate="no" dir="ltr">null</code>
          <code translate="no" dir="ltr">MediaMetadata</code>
          does not reevaluate the metadata (
          <a href="https://github.com/androidx/media/issues/1940">#1940</a>
          ).
        </li>
        <li>
          Change
          <code translate="no" dir="ltr">SimpleBasePlayer.State</code>
          access from protected to public to make it easier to handle updates in other classes (
          <a href="https://github.com/androidx/media/issues/2128">#2128</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      ExoPlayer:
      <ul>
        <li>
          Add
          <code translate="no" dir="ltr">MediaExtractorCompat</code>
          , a new class that provides equivalent features to platform
          <code translate="no" dir="ltr">MediaExtractor</code>
          .
        </li>
        <li>
          Add experimental 'ExoPlayer' pre-warming support for playback using
          <code translate="no" dir="ltr">MediaCodecVideoRenderer</code>
          . You can configure
          <code translate="no" dir="ltr">DefaultRenderersFactory</code>
          through
          <code translate="no" dir="ltr">experimentalSetEnableMediaCodecVideoRendererPrewarming</code>
          to provide a secondary
          <code translate="no" dir="ltr">MediaCodecVideoRenderer</code>
          to
          <code translate="no" dir="ltr">ExoPlayer</code>
          . If enabled,
          <code translate="no" dir="ltr">ExoPlayer</code>
          pre-processes the video of consecutive media items during playback to reduce media item transition latency.
        </li>
        <li>
          Reduce default values for
          <code translate="no" dir="ltr">bufferForPlaybackMs</code>
          and
          <code translate="no" dir="ltr">bufferForPlaybackAfterRebufferMs</code>
          in
          <code translate="no" dir="ltr">DefaultLoadControl</code>
          to 1000 and 2000 ms respectively.
        </li>
        <li>
          Initialize
          <code translate="no" dir="ltr">DeviceInfo</code>
          and device volume asynchronously (if enabled using
          <code translate="no" dir="ltr">setDeviceVolumeControlEnabled</code>
          ). These values aren't available instantly after
          <code translate="no" dir="ltr">ExoPlayer.Builder.build()</code>
          , and
          <code translate="no" dir="ltr">Player.Listener</code>
          notifies changes through
          <code translate="no" dir="ltr">onDeviceInfoChanged</code>
          and
          <code translate="no" dir="ltr">onDeviceVolumeChanged</code>
          .
        </li>
        <li>
          Initial audio session ID is no longer immediately available after creating the player. You can use
          <code translate="no" dir="ltr">AnalyticsListener.onAudioSessionIdChanged</code>
          to listen to the initial update if required.
        </li>
        <li>
          Consider language when selecting a video track. By default, select a 'main' video track that matches the language of the selected audio track, if available. Explicit video language preferences can be expressed with
          <code translate="no" dir="ltr">TrackSelectionParameters.Builder.setPreferredVideoLanguage(s)</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">selectedAudioLanguage</code>
          parameter to
          <code translate="no" dir="ltr">DefaultTrackSelector.selectVideoTrack()</code>
          method.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">retryCount</code>
          parameter to
          <code translate="no" dir="ltr">MediaSourceEventListener.onLoadStarted</code>
          and corresponding
          <code translate="no" dir="ltr">MediaSourceEventListener.EventDispatcher</code>
          methods.
        </li>
        <li>
          Fix bug where playlist items or periods in multi-period DASH streams with durations that don't match the actual content could cause frame freezes at the end of the item (
          <a href="https://github.com/androidx/media/issues/1698">#1698</a>
          ).
        </li>
        <li>
          Move
          <code translate="no" dir="ltr">BasePreloadManager.Listener</code>
          to a top-level
          <code translate="no" dir="ltr">PreloadManagerListener</code>
          .
        </li>
        <li>
          <code translate="no" dir="ltr">RenderersFactory.createSecondaryRenderer</code>
          can be implemented to provide secondary renderers for pre-warming. Pre-warming enables quicker media item transitions during playback.
        </li>
        <li>
          Enable sending
          <code translate="no" dir="ltr">CmcdData</code>
          for manifest requests in adaptive streaming formats DASH, HLS, and SmoothStreaming (
          <a href="https://github.com/androidx/media/issues/1951">#1951</a>
          ).
        </li>
        <li>
          Provide
          <code translate="no" dir="ltr">MediaCodecInfo</code>
          of the codec that will be initialized in
          <code translate="no" dir="ltr">MediaCodecRenderer.onReadyToInitializeCodec</code>
          (
          <a href="https://github.com/androidx/media/pull/1963">#1963</a>
          ).
        </li>
        <li>
          Change
          <code translate="no" dir="ltr">AdsMediaSource</code>
          to allow the
          <code translate="no" dir="ltr">AdPlaybackStates</code>
          to grow by appending ad groups. Invalid modifications are detected and throw an exception.
        </li>
        <li>Fix issue where additional decode-only frames may be displayed in quick succession when transitioning to content media after a mid-roll ad.</li>
        <li>
          Make
          <code translate="no" dir="ltr">DefaultRenderersFactory</code>
          add two
          <code translate="no" dir="ltr">MetadataRenderer</code>
          instances to enable apps to receive two different schemes of metadata by default.
        </li>
        <li>
          Reevaluate whether the ongoing load of a chunk should be cancelled when playback is paused (
          <a href="https://github.com/androidx/media/pull/1785">#1785</a>
          ).
        </li>
        <li>
          Add option to
          <code translate="no" dir="ltr">ClippingMediaSource</code>
          to allow clipping in unseekable media.
        </li>
        <li>Fix bug where seeking with pre-warming could block following media item transition.</li>
        <li>
          Fix a bug where
          <code translate="no" dir="ltr">ExoPlayer.isLoading()</code>
          remains
          <code translate="no" dir="ltr">true</code>
          while it has transitioned to
          <code translate="no" dir="ltr">STATE_IDLE</code>
          or
          <code translate="no" dir="ltr">STATE_ENDED</code>
          (
          <a href="https://github.com/androidx/media/issues/2133">#2133</a>
          ).
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">lastRebufferRealtimeMs</code>
          to
          <code translate="no" dir="ltr">LoadControl.Parameter</code>
          (
          <a href="https://github.com/androidx/media/pull/2113">#2113</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Transformer:
      <ul>
        <li>Add support for transmuxing into alternative backward compatible formats.</li>
        <li>Add support for transcoding and transmuxing Dolby Vision (profile 8) format.</li>
        <li>
          Update parameters of
          <code translate="no" dir="ltr">VideoFrameProcessor.registerInputStream</code>
          and
          <code translate="no" dir="ltr">VideoFrameProcessor.Listener.onInputStreamRegistered</code>
          to use
          <code translate="no" dir="ltr">Format</code>
          .
        </li>
        <li>
          Generate HDR static metadata when using
          <code translate="no" dir="ltr">DefaultEncoderFactory</code>
          .
        </li>
        <li>
          Enable support for Android platform diagnostics using
          <code translate="no" dir="ltr">MediaMetricsManager</code>
          . Transformer forwards editing events and performance data to the platform, which helps to provide system performance and debugging information on the device. This data may also be collected by Google
          <a href="https://support.google.com/accounts/answer/6078260">if sharing usage and diagnostics data is enabled</a>
          by the user of the device. Apps can opt-out of contributing to platform diagnostics for Transformer with
          <code translate="no" dir="ltr">Transformer.Builder.setUsePlatformDiagnostics(false)</code>
          .
        </li>
        <li>
          Split
          <code translate="no" dir="ltr">InAppMuxer</code>
          into
          <code translate="no" dir="ltr">InAppMp4Muxer</code>
          and
          <code translate="no" dir="ltr">InAppFragmentedMp4Muxer</code>
          . You use
          <code translate="no" dir="ltr">InAppMp4Muxer</code>
          to produce a non-fragmented MP4 file, while
          <code translate="no" dir="ltr">InAppFragmentedMp4Muxer</code>
          is for producing a fragmented MP4 file.
        </li>
        <li>
          Move
          <code translate="no" dir="ltr">Muxer</code>
          interface from
          <code translate="no" dir="ltr">media3-muxer</code>
          to
          <code translate="no" dir="ltr">media3-transformer</code>
          .
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">MediaProjectionAssetLoader</code>
          , which provides media from a
          <code translate="no" dir="ltr">MediaProjection</code>
          for screen recording, and add support for screen recording to the Transformer demo app.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">#getInputFormat()</code>
          to
          <code translate="no" dir="ltr">Codec</code>
          interface.
        </li>
        <li>
          Shift the responsibility to release the
          <code translate="no" dir="ltr">GlObjectsProvider</code>
          onto the caller in
          <code translate="no" dir="ltr">DefaultVideoFrameProcessor</code>
          and
          <code translate="no" dir="ltr">DefaultVideoCompositor</code>
          when possible.
        </li>
      </ul>
    </li>
    <li>
      Extractors:
      <ul>
        <li>AVI: Fix handling of files with constant bitrate compressed audio where the stream header stores the number of bytes instead of the number of chunks.</li>
        <li>Fix handling of NAL units with lengths expressed in 1 or 2 bytes (rather than 4).</li>
        <li>
          Fix
          <code translate="no" dir="ltr">ArrayIndexOutOfBoundsException</code>
          in MP4 edit lists when the edit list starts at a non-sync frame with no preceding sync frame (
          <a href="https://github.com/androidx/media/issues/2062">#2062</a>
          ).
        </li>
        <li>
          Fix issue where TS streams can get stuck on some devices (
          <a href="https://github.com/androidx/media/issues/2069">#2069</a>
          ).
        </li>
        <li>
          FLAC: Add support for 32-bit FLAC files. Previously these would fail to play with
          <code translate="no" dir="ltr">IllegalStateException: Playback stuck buffering and not loading</code>
          (
          <a href="https://github.com/androidx/media/issues/2197">#2197</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Audio:
      <ul>
        <li>
          Fix
          <code translate="no" dir="ltr">onAudioPositionAdvancing</code>
          to be called when playback resumes (previously it was called when playback was paused).
        </li>
        <li>
          Don't bypass
          <code translate="no" dir="ltr">SonicAudioProcessor</code>
          when
          <code translate="no" dir="ltr">SpeedChangingAudioProcessor</code>
          is configured with default parameters.
        </li>
        <li>
          Fix underflow in
          <code translate="no" dir="ltr">Sonic#getOutputSize()</code>
          that could cause
          <code translate="no" dir="ltr">DefaultAudioSink</code>
          to stall.
        </li>
        <li>
          Fix
          <code translate="no" dir="ltr">MediaCodecAudioRenderer.getDurationToProgressUs()</code>
          and
          <code translate="no" dir="ltr">DecoderAudioRenderer.getDurationToProgressUs()</code>
          so that seeks correctly reset the provided durations.
        </li>
        <li>
          Make
          <code translate="no" dir="ltr">androidx.media3.common.audio.SonicAudioProcessor</code>
          final.
        </li>
        <li>
          Add support for float PCM to
          <code translate="no" dir="ltr">ChannelMappingAudioProcessor</code>
          and
          <code translate="no" dir="ltr">TrimmingAudioProcessor</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Video:
      <ul>
        <li>
          Change
          <code translate="no" dir="ltr">MediaCodecVideoRenderer.shouldUsePlaceholderSurface</code>
          to protected so that applications can override to block usage of placeholder surfaces (
          <a href="https://github.com/androidx/media/pull/1905">#1905</a>
          ).
        </li>
        <li>
          Add experimental
          <code translate="no" dir="ltr">ExoPlayer</code>
          AV1 sample dependency parsing to speed up seeking. Enable it with the new
          <code translate="no" dir="ltr">DefaultRenderersFactory.experimentalSetParseAv1SampleDependencies</code>
          API.
        </li>
        <li>
          Add experimental
          <code translate="no" dir="ltr">ExoPlayer</code>
          API to drop late
          <code translate="no" dir="ltr">MediaCodecVideoRenderer</code>
          decoder input buffers that are not depended on. Enable it with
          <code translate="no" dir="ltr">DefaultRenderersFactory.experimentalSetLateThresholdToDropDecoderInputUs</code>
          .
        </li>
        <li>
          Fix issue where a player without a surface was ready immediately and very slow decoding any pending frames (
          <a href="https://github.com/androidx/media/issues/1973">#1973</a>
          ).
        </li>
        <li>
          Exclude Xiaomi and OPPO devices from detached surface mode to avoid screen flickering (
          <a href="https://github.com/androidx/media/issues/2059">#2059</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Text:
      <ul>
        <li>
          Add support for VobSub subtitles (
          <a href="https://github.com/google/ExoPlayer/issues/8260">#8260</a>
          ).
        </li>
        <li>
          Stop eagerly loading all subtitle files configured with
          <code translate="no" dir="ltr">MediaItem.Builder.setSubtitleConfigurations</code>
          , and instead only load one if it is selected by track selection (
          <a href="https://github.com/androidx/media/issues/1721">#1721</a>
          ).
        </li>
        <li>
          TTML: Add support for referencing
          <code translate="no" dir="ltr">tts:origin</code>
          and
          <code translate="no" dir="ltr">tts:extent</code>
          using
          <code translate="no" dir="ltr">style</code>
          (
          <a href="https://github.com/google/ExoPlayer/issues/2953">#2953</a>
          ).
        </li>
        <li>
          Restrict WebVTT and SubRip timestamps to exactly 3 decimal places. Previously we incorrectly parsed any number of decimal places but always assumed the value was in milliseconds, leading to incorrect timestamps (
          <a href="https://github.com/androidx/media/issues/1997">#1997</a>
          ).
        </li>
        <li>Fix playback hanging when a playlist contains clipped items with CEA-608 or CEA-708 captions.</li>
        <li>
          Fix
          <code translate="no" dir="ltr">IllegalStateException</code>
          when an SSA file contains a cue with zero duration (start and end time equal) (
          <a href="https://github.com/androidx/media/issues/2052">#2052</a>
          ).
        </li>
        <li>
          Suppress (and log) subtitle parsing errors when subtitles are muxed into the same container as audio and video (
          <a href="https://github.com/androidx/media/issues/2052">#2052</a>
          ).
        </li>
        <li>
          Fix handling of multi-byte UTF-8 characters in WebVTT files using CR line endings (
          <a href="https://github.com/androidx/media/issues/2167">#2167</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      DRM:
      <ul>
        <li>
          Fix
          <code translate="no" dir="ltr">MediaCodec$CryptoException: Operation not supported in this configuration</code>
          error when playing ClearKey content on API &lt; 27 devices (
          <a href="https://github.com/androidx/media/issues/1732">#1732</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Effect:
      <ul>
        <li>
          Moved the functionality of
          <code translate="no" dir="ltr">OverlaySettings</code>
          into
          <code translate="no" dir="ltr">StaticOverlaySettings</code>
          .
          <code translate="no" dir="ltr">OverlaySettings</code>
          can be subclassed to allow dynamic overlay settings.
        </li>
      </ul>
    </li>
    <li>
      Muxers:
      <ul>
        <li>
          Moved
          <code translate="no" dir="ltr">MuxerException</code>
          out of
          <code translate="no" dir="ltr">Muxer</code>
          interface to avoid a very long fully qualified name.
        </li>
        <li>
          Renamed
          <code translate="no" dir="ltr">setSampleCopyEnabled()</code>
          method to
          <code translate="no" dir="ltr">setSampleCopyingEnabled()</code>
          in both
          <code translate="no" dir="ltr">Mp4Muxer.Builder</code>
          and
          <code translate="no" dir="ltr">FragmentedMp4Muxer.Builder</code>
          .
        </li>
        <li>
          <code translate="no" dir="ltr">Mp4Muxer.addTrack()</code>
          and
          <code translate="no" dir="ltr">FragmentedMp4Muxer.addTrack()</code>
          now return an
          <code translate="no" dir="ltr">int</code>
          track ID instead of a
          <code translate="no" dir="ltr">TrackToken</code>
          .
        </li>
        <li>
          <code translate="no" dir="ltr">Mp4Muxer</code>
          and
          <code translate="no" dir="ltr">FragmentedMp4Muxer</code>
          no longer implement
          <code translate="no" dir="ltr">Muxer</code>
          interface.
        </li>
        <li>
          Disable
          <code translate="no" dir="ltr">Mp4Muxer</code>
          sample batching and copying by default.
        </li>
        <li>
          Fix a bug in
          <code translate="no" dir="ltr">FragmentedMp4Muxer</code>
          that creates a lot of fragments when only audio track is written.
        </li>
      </ul>
    </li>
    <li>
      Session:
      <ul>
        <li>
          Keep foreground service state for an additional 10 minutes when playback pauses, stops or fails. This allows users to resume playback within this timeout without risking foreground service restrictions on various devices. Note that just calling
          <code translate="no" dir="ltr">player.pause()</code>
          can no longer be used to stop the foreground service before
          <code translate="no" dir="ltr">stopSelf()</code>
          when overriding
          <code translate="no" dir="ltr">onTaskRemoved</code>
          , use
          <code translate="no" dir="ltr">MediaSessionService.pauseAllPlayersAndStopSelf()</code>
          instead.
        </li>
        <li>Keep notification visible when playback enters an error or stopped state. The notification is only removed if the playlist is cleared or the player is released.</li>
        <li>Improve handling of Android platform MediaSession actions ACTION_PLAY and ACTION_PAUSE to only set one of them according to the available commands and also accept if only one of them is set.</li>
        <li>
          Add
          <code translate="no" dir="ltr">Context</code>
          as a parameter to
          <code translate="no" dir="ltr">MediaButtonReceiver.shouldStartForegroundService</code>
          (
          <a href="https://github.com/androidx/media/issues/1887">#1887</a>
          ).
        </li>
        <li>
          Fix bug where calling a
          <code translate="no" dir="ltr">Player</code>
          method on a
          <code translate="no" dir="ltr">MediaController</code>
          connected to a legacy session dropped changes from a pending update.
        </li>
        <li>
          Make
          <code translate="no" dir="ltr">MediaSession.setSessionActivity(PendingIntent)</code>
          accept null (
          <a href="https://github.com/androidx/media/issues/2109">#2109</a>
          ).
        </li>
        <li>
          Fix bug where a stale notification stays visible when the playlist is cleared (
          <a href="https://github.com/androidx/media/issues/2211">#2211</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      UI:
      <ul>
        <li>
          Add state holders and composables to the
          <code translate="no" dir="ltr">media3-ui-compose</code>
          module for
          <code translate="no" dir="ltr">PlayerSurface</code>
          ,
          <code translate="no" dir="ltr">PresentationState</code>
          ,
          <code translate="no" dir="ltr">PlayPauseButtonState</code>
          ,
          <code translate="no" dir="ltr">NextButtonState</code>
          ,
          <code translate="no" dir="ltr">PreviousButtonState</code>
          ,
          <code translate="no" dir="ltr">RepeatButtonState</code>
          ,
          <code translate="no" dir="ltr">ShuffleButtonState</code>
          and
          <code translate="no" dir="ltr">PlaybackSpeedState</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Downloads:
      <ul>
        <li>
          Fix bug in
          <code translate="no" dir="ltr">CacheWriter</code>
          that leaves data sources open and cache areas locked in case the data source throws an
          <code translate="no" dir="ltr">Exception</code>
          other than
          <code translate="no" dir="ltr">IOException</code>
          (
          <a href="https://github.com/google/ExoPlayer/issues/9760">#9760</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      HLS extension:
      <ul>
        <li>
          Add a first version of
          <code translate="no" dir="ltr">HlsInterstitialsAdsLoader</code>
          . The ads loader reads the HLS interstitials of an HLS media playlist and maps them to the
          <code translate="no" dir="ltr">AdPlaybackState</code>
          that is passed to the
          <code translate="no" dir="ltr">AdsMediaSource</code>
          . This initial version only supports HLS VOD streams with
          <code translate="no" dir="ltr">X-ASSET-URI</code>
          attributes.
        </li>
        <li>
          Add
          <code translate="no" dir="ltr">HlsInterstitialsAdsLoader.AdsMediaSourceFactory</code>
          . Apps can use it to create
          <code translate="no" dir="ltr">AdsMediaSource</code>
          instances that use an
          <code translate="no" dir="ltr">HlsInterstitialsAdsLoader</code>
          in a convenient and safe way.
        </li>
        <li>
          Parse
          <code translate="no" dir="ltr">SUPPLEMENTAL-CODECS</code>
          tag from HLS playlist to detect Dolby Vision formats (
          <a href="https://github.com/androidx/media/pull/1785">#1785</a>
          ).
        </li>
        <li>
          Loosen the condition for seeking to sync positions in an HLS stream (
          <a href="https://github.com/androidx/media/issues/2209">#2209</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      DASH extension:
      <ul>
        <li>
          Add AC-4 Level-4 format support for DASH (
          <a href="https://github.com/androidx/media/pull/1898">#1898</a>
          ).
        </li>
        <li>
          Fix issue when calculating the update interval for ad insertion in multi-period live streams (
          <a href="https://github.com/androidx/media/issues/1698">#1698</a>
          ).
        </li>
        <li>
          Parse
          <code translate="no" dir="ltr">scte214:supplementalCodecs</code>
          attribute from DASH manifest to detect Dolby Vision formats (
          <a href="https://github.com/androidx/media/pull/1785">#1785</a>
          ).
        </li>
        <li>
          Improve handling of period transitions in live streams where the period contains media samples beyond the declared period duration (
          <a href="https://github.com/androidx/media/issues/1698">#1698</a>
          ).
        </li>
        <li>
          Fix issue where adaptation sets marked with
          <code translate="no" dir="ltr">adaptation-set-switching</code>
          but different languages or role flags are merged together (
          <a href="https://github.com/androidx/media/issues/2222">#2222</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Decoder extensions (FFmpeg, VP9, AV1, etc.):
      <ul>
        <li>
          Add the MPEG-H decoder module which uses the built-in MPEG-H decoder to decode MPEG-H audio (
          <a href="https://github.com/androidx/media/pull/1826">#1826</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      MIDI extension:
      <ul>
        <li>
          Plumb custom
          <code translate="no" dir="ltr">AudioSink</code>
          and
          <code translate="no" dir="ltr">AudioRendererEventListener</code>
          instances into
          <code translate="no" dir="ltr">MidiRenderer</code>
          .
        </li>
      </ul>
    </li>
    <li>
      Cast extension:
      <ul>
        <li>
          Bump the
          <code translate="no" dir="ltr">play-services-cast-framework</code>
          dependency to 21.5.0 to fix a
          <code translate="no" dir="ltr">FLAG_MUTABLE</code>
          crash in apps targeting API 34+ on devices with Google Play services installed but disabled (
          <a href="https://github.com/androidx/media/issues/2178">#2178</a>
          ).
        </li>
      </ul>
    </li>
    <li>
      Demo app:
      <ul>
        <li>
          Extend
          <code translate="no" dir="ltr">demo-compose</code>
          with additional buttons and enhance
          <code translate="no" dir="ltr">PlayerSurface</code>
          integration with scaling and shutter support.
        </li>
      </ul>
    </li>
    <li>
      Remove deprecated symbols:
      <ul>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">AudioMixer.create()</code>
          method. Use
          <code translate="no" dir="ltr">DefaultAudioMixer.Factory().create()</code>
          instead.
        </li>
        <li>
          Remove the following deprecated
          <code translate="no" dir="ltr">Transformer.Builder</code>
          methods:
          <ul>
            <li>
              <code translate="no" dir="ltr">setTransformationRequest()</code>
              , use
              <code translate="no" dir="ltr">setAudioMimeType()</code>
              ,
              <code translate="no" dir="ltr">setVideoMimeType()</code>
              , and
              <code translate="no" dir="ltr">setHdrMode()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setAudioProcessors()</code>
              , set the audio processor in an
              <code translate="no" dir="ltr">EditedMediaItem.Builder.setEffects()</code>
              , and pass it to
              <code translate="no" dir="ltr">Transformer.start()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setVideoEffects()</code>
              , set video effect in an
              <code translate="no" dir="ltr">EditedMediaItem.Builder.setEffects()</code>
              , and pass it to
              <code translate="no" dir="ltr">Transformer.start()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setRemoveAudio()</code>
              , use
              <code translate="no" dir="ltr">EditedMediaItem.Builder.setRemoveAudio()</code>
              to remove the audio from the
              <code translate="no" dir="ltr">EditedMediaItem</code>
              passed to
              <code translate="no" dir="ltr">Transformer.start()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setRemoveVideo()</code>
              , use
              <code translate="no" dir="ltr">EditedMediaItem.Builder.setRemoveVideo()</code>
              to remove the video from the
              <code translate="no" dir="ltr">EditedMediaItem</code>
              passed to
              <code translate="no" dir="ltr">Transformer.start()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setFlattenForSlowMotion()</code>
              , use
              <code translate="no" dir="ltr">EditedMediaItem.Builder.setFlattenForSlowMotion()</code>
              to flatten the
              <code translate="no" dir="ltr">EditedMediaItem</code>
              passed to
              <code translate="no" dir="ltr">Transformer.start()</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">setListener()</code>
              , use
              <code translate="no" dir="ltr">addListener()</code>
              ,
              <code translate="no" dir="ltr">removeListener()</code>
              or
              <code translate="no" dir="ltr">removeAllListeners()</code>
              instead.
            </li>
          </ul>
        </li>
        <li>
          Remove the following deprecated
          <code translate="no" dir="ltr">Transformer.Listener</code>
          methods:
          <ul>
            <li>
              <code translate="no" dir="ltr">onTransformationCompleted(MediaItem)</code>
              , use
              <code translate="no" dir="ltr">onCompleted(Composition, ExportResult)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">onTransformationCompleted(MediaItem, TransformationResult)</code>
              , use
              <code translate="no" dir="ltr">onCompleted(Composition, ExportResult)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">onTransformationError(MediaItem, Exception)</code>
              , use
              <code translate="no" dir="ltr">onError(Composition, ExportResult, ExportException)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">onTransformationError(MediaItem, TransformationException)</code>
              , use
              <code translate="no" dir="ltr">onError(Composition, ExportResult, ExportException)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">onTransformationError(MediaItem, TransformationResult, TransformationException)</code>
              , use
              <code translate="no" dir="ltr">onError(Composition, ExportResult, ExportException)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">onFallbackApplied(MediaItem, TransformationRequest, TransformationRequest)</code>
              , use
              <code translate="no" dir="ltr">onFallbackApplied(Composition, TransformationRequest, TransformationRequest)</code>
              instead.
            </li>
          </ul>
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">TransformationResult</code>
          class. Use
          <code translate="no" dir="ltr">ExportResult</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">TransformationException</code>
          class. Use
          <code translate="no" dir="ltr">ExportException</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">Transformer.PROGRESS_STATE_NO_TRANSFORMATION</code>
          . Use
          <code translate="no" dir="ltr">Transformer.PROGRESS_STATE_NOT_STARTED</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">Transformer.setListener()</code>
          . Use
          <code translate="no" dir="ltr">Transformer.addListener()</code>
          ,
          <code translate="no" dir="ltr">Transformer.removeListener()</code>
          or
          <code translate="no" dir="ltr">Transformer.removeAllListeners()</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">Transformer.startTransformation()</code>
          . Use
          <code translate="no" dir="ltr">Transformer.start(MediaItem, String)</code>
          instead.
        </li>
        <li>
          Remove deprecated
          <code translate="no" dir="ltr">SingleFrameGlShaderProgram</code>
          . Use
          <code translate="no" dir="ltr">BaseGlShaderProgram</code>
          instead.
        </li>
        <li>
          Remove
          <code translate="no" dir="ltr">Transformer.flattenForSlowMotion</code>
          . Use
          <code translate="no" dir="ltr">EditedMediaItem.flattenForSlowMotion</code>
          instead.
        </li>
        <li>
          Removed
          <code translate="no" dir="ltr">ExoPlayer.VideoComponent</code>
          ,
          <code translate="no" dir="ltr">ExoPlayer.AudioComponent</code>
          ,
          <code translate="no" dir="ltr">ExoPlayer.TextComponent</code>
          and
          <code translate="no" dir="ltr">ExoPlayer.DeviceComponent</code>
          .
        </li>
        <li>
          Removed
          <code translate="no" dir="ltr">androidx.media3.exoplayer.audio.SonicAudioProcessor</code>
          .
        </li>
        <li>
          Removed the following deprecated
          <code translate="no" dir="ltr">DownloadHelper</code>
          methods:
          <ul>
            <li>
              Constructor
              <code translate="no" dir="ltr">DownloadHelper(MediaItem, @Nullable MediaSource, TrackSelectionParameters, RendererCapabilities[])</code>
              , use
              <code translate="no" dir="ltr">DownloadHelper(MediaItem, @Nullable MediaSource, TrackSelectionParameters, RendererCapabilitiesList)</code>
              instead.
            </li>
            <li>
              <code translate="no" dir="ltr">getRendererCapabilities(RenderersFactory)</code>
              , equivalent functionality can be achieved by creating a
              <code translate="no" dir="ltr">DefaultRendererCapabilitiesList</code>
              with a
              <code translate="no" dir="ltr">RenderersFactory</code>
              , and calling
              <code translate="no" dir="ltr">DefaultRendererCapabilitiesList.getRendererCapabilities()</code>
              .
            </li>
          </ul>
        </li>
        <li>
          Removed
          <code translate="no" dir="ltr">PlayerNotificationManager.setMediaSessionToken(MediaSessionCompat)</code>
          method. Use
          <code translate="no" dir="ltr">PlayerNotificationManager.setMediaSessionToken(MediaSession.Token)</code>
          and pass in
          <code translate="no" dir="ltr">(MediaSession.Token) compatToken.getToken()</code>
          instead.
        </li>
      </ul>
    </li>
  </ul>
