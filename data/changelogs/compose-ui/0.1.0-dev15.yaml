libraryId: compose-ui
groupId: androidx.compose
version: 0.1.0-dev15
releaseDate: 2020-07-22
#language=html
changelogHtml: |
  <h3 id="0.1.0-dev15" data-text="Version 0.1.0-dev15" tabindex="-1">Version 0.1.0-dev15</h3>
  <p>July 22, 2020</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.ui:ui-*:0.1.0-dev15</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/9f60cc700129e30cee9df020005c317fb39d32ec/ui">Version 0.1.0-dev15 contains these commits.</a>
  </p>
  <h4 id="dependencies_update_2" data-text="Dependencies Update" tabindex="-1">Dependencies Update</h4>
  <ul>
    <li>
      To use the
      <code translate="no" dir="ltr">0.1.0-dev15</code>
      version of Compose, you will need to update your dependencies according to the new code snippets shown above in
      <a href="#declaring_dependencies">Declaring dependencies</a>
      .
    </li>
  </ul>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      FocusModifier is deprecated in favor of Modifier.focus, Modifier.focusRequester, Modifier.focusObserver. FocusState and FocusDetailedState are deprecated in favor of FocusState2 (
      <a href="https://android-review.googlesource.com/#/q/I469196b76ebe08130fa4df9ed297f111abddd8b1">I46919</a>
      ,
      <a href="https://issuetracker.google.com/issues/160822875">b/160822875</a>
      ,
      <a href="https://issuetracker.google.com/issues/160922136">b/160922136</a>
      )
    </li>
    <li>
      Added a modifier to observe focus state change. (
      <a href="https://android-review.googlesource.com/#/q/I05866104c323317f41f43ce1c286236b7e344d4b">I05866</a>
      ,
      <a href="https://issuetracker.google.com/issues/160924455">b/160924455</a>
      ,
      <a href="https://issuetracker.google.com/issues/160923326">b/160923326</a>
      )
    </li>
    <li>
      Added a modifier to request focus changes (
      <a href="https://android-review.googlesource.com/#/q/I8dd73cf3ce77e112a9f97f203b8ec7a0f07bc706">I8dd73</a>
      ,
      <a href="https://issuetracker.google.com/issues/161182057">b/161182057</a>
      ,
      <a href="https://issuetracker.google.com/issues/160924778">b/160924778</a>
      )
    </li>
    <li>
      Ajdust the Toolbar Menu to show copy, cut, paste properly. (
      <a href="https://android-review.googlesource.com/#/q/Id3955ab3845cc6ad1807b95bc39e73facf0fd358">Id3955</a>
      )
    </li>
    <li>
      Single-value semantics properties now use a calling style. For example, 'semantics { hidden = true }' is now written as:
      <code translate="no" dir="ltr">semantics { hidden() }</code>
      . (
      <a href="https://android-review.googlesource.com/#/q/Ic1afd12ea22c926babc9662f1804d80b33aa0cfc">Ic1afd</a>
      ,
      <a href="https://issuetracker.google.com/issues/145951226">b/145951226</a>
      ,
      <a href="https://issuetracker.google.com/issues/145955412">b/145955412</a>
      )
    </li>
    <li>
      Added Modifier.focus which replaces FocusModifier. (
      <a href="https://android-review.googlesource.com/#/q/Ib852a056a0f3c76757f0fdef07e75e82bf178b8d">Ib852a</a>
      ,
      <a href="https://issuetracker.google.com/issues/160924778">b/160924778</a>
      )
    </li>
    <li>
      Add FloatingToolbar for TextField Selection. (
      <a href="https://android-review.googlesource.com/#/q/Ie8b07e4405940f9d4b4147c34406c80a557b4d45">Ie8b07</a>
      )
    </li>
    <li>
      Added an experimental api annotation for key input related API (
      <a href="https://android-review.googlesource.com/#/q/I53c0a52af14dd832170f774cbb638c253abd639d">I53c0a</a>
      )
    </li>
    <li>
      Added an experimental api annotation for all Focus-related API (
      <a href="https://android-review.googlesource.com/#/q/I53b247a7feb23bd99b5f15f2cf0cfaddb104a888">I53b24</a>
      ,
      <a href="https://issuetracker.google.com/issues/160903352">b/160903352</a>
      )
    </li>
    <li>
      Added FocusState2 which will replace FocusDetailedState (
      <a href="https://android-review.googlesource.com/#/q/I0a3ba4e87508dd29e0c355114c4caccb3252ac84">I0a3ba</a>
      ,
      <a href="https://issuetracker.google.com/issues/160822595">b/160822595</a>
      )
    </li>
    <li>
      Added ExperimentalFocus which is an @OptIn annotation for Focus API. (
      <a href="https://android-review.googlesource.com/#/q/I1544bc717d24434ccc2295244ddb6bf7b2dde3c8">I1544b</a>
      ,
      <a href="https://issuetracker.google.com/issues/160820961">b/160820961</a>
      )
    </li>
    <li>
      An IntBounds unit class has been added, representing integer pixel bounds from layout. The API of PopupPositionProvider has been updated to use it. (
      <a href="https://android-review.googlesource.com/#/q/I0d8d03c5535c80c6808d8f9ca7a210408890e6e7">I0d8d0</a>
      ,
      <a href="https://issuetracker.google.com/issues/159596546">b/159596546</a>
      )
    </li>
    <li>
      Applier now requires a clear() method for disposing compositions (
      <a href="https://android-review.googlesource.com/#/q/Ibe697b06ea885852731d029ef56da657b5f290dc">Ibe697</a>
      )
    </li>
    <li>
      KeyEvent is deprecated and replaced by KeyEvent2 (
      <a href="https://android-review.googlesource.com/#/q/I687305a80a4caff2645d87bfac108205028f9f44">I68730</a>
      )
    </li>
    <li>
      A new optional flag useUnmergedTree was added to test finders. (
      <a href="https://android-review.googlesource.com/#/q/I2ce48556aa3b0a0c73f4a56a0d9eed63eda49160">I2ce48</a>
      )
    </li>
    <li>
      Made LayoutNode experimental API (
      <a href="https://android-review.googlesource.com/#/q/I4f2e93737020b0993f8ba5671e2a0a87f5de3ce2">I4f2e9</a>
      )
    </li>
    <li>
      <p>Added copy methods to various inline class types including:</p>

      <ul>
        <li>Offset</li>
        <li>Size</li>
        <li>Radius</li>
        <li>Motion</li>
        <li><p>TransformOrigin</p></li>
        <li>
          <p>
            Deprecated Size.copy companion object method favor of instance copy method (
            <a href="https://android-review.googlesource.com/#/q/Ife2903a0277e051188884cb5d5feefcae8875dd1">Ife290</a>
            ,
            <a href="https://issuetracker.google.com/issues/159905651">b/159905651</a>
            )
          </p>
        </li>
      </ul>
    </li>
    <li>
      <p>
        Popups, Dialogs and Menus are now inheriting the contextual MaterialTheme (
        <a href="https://android-review.googlesource.com/#/q/Ia3665905218b4d12d7a9bd121a69a51569d82694">Ia3665</a>
        ,
        <a href="https://issuetracker.google.com/issues/156527485">b/156527485</a>
        )
      </p>
    </li>
    <li>
      <p>
        TextDirection is renamed as ResolvedTextDirection (
        <a href="https://android-review.googlesource.com/#/q/I3ff38ad5993a0b844dced711e38c729d2b0c8697">I3ff38</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed layout direction parameter from the measure block of the Layout() function. Layout direction is however available inside the callback through the measure scope object (
        <a href="https://android-review.googlesource.com/#/q/Ic7d9d797938e6e2a91916836e5e9688794115c22">Ic7d9d</a>
        )
      </p>
    </li>
    <li>
      <p>
        Refactor SelectionHandles for reusing. (
        <a href="https://android-review.googlesource.com/#/q/I420e0c6a5c00684ac9b4e2afb5ad1fec97668e38">I420e0</a>
        )
      </p>
    </li>
    <li>
      <p>
        Clickable was removed. Use Modifier.clickable (
        <a href="https://android-review.googlesource.com/#/q/I84bdf2bc75e8ccda44afbe9db49d4c879703309b">I84bdf</a>
        )
      </p>
    </li>
    <li>
      <p>
        TestTag and Semantics have been deleted. Use Modifier.testTag and Modifier.semantics instead (
        <a href="https://android-review.googlesource.com/#/q/I15ff0bece5791ff8adae20c3c1bcaf48cea7f1b0">I15ff0</a>
        ,
        <a href="https://issuetracker.google.com/issues/158841414">b/158841414</a>
        )
      </p>
    </li>
    <li>
      <p>
        Prior to this change, the compose compiler plugin would non-trivially intercept calls to constructors inside of a @Composable function if there was an (
        <a href="https://android-review.googlesource.com/#/q/I5205af707238a70d600c105843cd99e88a5381e0">I5205a</a>
        ,
        <a href="https://issuetracker.google.com/issues/158123804">b/158123804</a>
        )
      </p>
    </li>
    <li>
      <p>
        Modifier.tag was renamed to Modifier.layoutId, to avoid confusion with Modifier.testTag. (
        <a href="https://android-review.googlesource.com/#/q/I995f09d0722964ad8a5708c7299e4c6f52bec1c5">I995f0</a>
        )
      </p>
    </li>
    <li>
      <p>
        Alignment line Int positions returned from Placeable#get(AlignmentLine) are now non-null. If the queried alignment line is missing, AlignmentLine.Unspecified will be returned. (
        <a href="https://android-review.googlesource.com/#/q/I896c5ef8a18919aa84413669341e716bf676e32e">I896c5</a>
        ,
        <a href="https://issuetracker.google.com/issues/158134875">b/158134875</a>
        )
      </p>
    </li>
    <li>
      <p>
        The AndroidView composable was added a modifier parameter. (
        <a href="https://android-review.googlesource.com/#/q/I48a88f9f907dd8bcf8153ce0f7d3f93cff961d9d">I48a88</a>
        ,
        <a href="https://issuetracker.google.com/issues/158746303">b/158746303</a>
        )
      </p>
    </li>
    <li>
      <p>
        Semantics() is deprecated. Use Modifier.semantics() instead. (
        <a href="https://android-review.googlesource.com/#/q/I72407fe09b5fe663baaa1e3a788107f0675eb10c">I72407</a>
        ,
        <a href="https://issuetracker.google.com/issues/158841414">b/158841414</a>
        )
      </p>
    </li>
    <li>
      <p>
        Add viewModel() composable which allows to create or get already created ViewModel similarly to how it works in Activity or Fragment (
        <a href="https://android-review.googlesource.com/#/q/I5fdd19bccbb57252e928b0f65097678022f860ef">I5fdd1</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of IntPx with Int. Replaced IntPxPosition with IntOffset. Replaced IntPxSize with IntSize. (
        <a href="https://android-review.googlesource.com/#/q/Ib7b44d92ce3aff86c606753f0ac5c3122b71041d">Ib7b44</a>
        )
      </p>
    </li>
    <li>
      <p>
        In order to consolidate the number of classes used to represent sizing information, standardize on usage of the Size class instead of PxSize. This provides the benefits of an inline class to leverage a long to pack 2 float values to represent width and height represented as floats. (
        <a href="https://android-review.googlesource.com/#/q/Ic019171b52d2f24d262d9c47ac964728cdc1ee8b">Ic0191</a>
        )
      </p>
    </li>
    <li>
      <p>
        In order to consolidate the number of classes used to represent positioning information, standardize on usage of the Offset class instead of PxPosition. This provides the benefits of an inline class to leverage a long to pack 2 float values to represent x and y offsets represented as floats. (
        <a href="https://android-review.googlesource.com/#/q/I3ad983207bc37af20afac03e2cd09b4240777687">I3ad98</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters. Deleted Px class in its entirety (
        <a href="https://android-review.googlesource.com/#/q/I3ff339371abd6fb622172d060a70d12dda4822e0">I3ff33</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/I086f4744d1eb51f0f31356e36991c2a8d4433059">I086f4</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/Id343458210b56a9a4cdae4ef3d0f97ea79004942">Id3434</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/I97a5af412d913a53e5ff575bbf685f007d25c0d6">I97a5a</a>
        )
      </p>
    </li>
    <li>
      <p>
        TestTag is now deprecated. Use Modifier.testTag instead. (
        <a href="https://android-review.googlesource.com/#/q/If5110df5865f5933d10d54a8aacba58f8cd1c712">If5110</a>
        ,
        <a href="https://issuetracker.google.com/issues/157173105">b/157173105</a>
        )
      </p>
    </li>
    <li>
      <p>
        The default, no-op, implementation of ParentDataModifier#modifyParentData has been removed - it was equivalent to not implementing the interface in the first place. (
        <a href="https://android-review.googlesource.com/#/q/I0deaa7c824bb5a127f6358894ff2131296c0cecb">I0deaa</a>
        )
      </p>
    </li>
    <li>
      <p>
        Previously deprecated ScaleFit as removed. Use ContentScale instead. (
        <a href="https://android-review.googlesource.com/#/q/Ifbc5b150883fd4c62e31a1988371f569bed0340c">Ifbc5b</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/I19d02beca10c30e9b6b444be0c2dd21227e30e9c">I19d02</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added the DropdownMenu component in ui-material, a Material Design menu implementation. (
        <a href="https://android-review.googlesource.com/#/q/I9bb3d43fc1bb60cd0fed933c76b9d58cc5211514">I9bb3d</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed deprecated LayoutTag(), please use Modifier.tag() instead. Removed deprecated Modifier.matchParent(), please use Modifier.matchParentSize() instead. (
        <a href="https://android-review.googlesource.com/#/q/If8044397663695ed258a1c8f8c01caa70ff2064f">If8044</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/I57bff9fbed3da9c71e8f5b24bbe75296d7275769">I57bff</a>
        )
      </p>
    </li>
    <li>
      <p>
        Modifier.semantics has been undeprecated to allow usages for high level components. (
        <a href="https://android-review.googlesource.com/#/q/I4cfdc837d5ac2d240af5a5ac6b755aebf800af15">I4cfdc</a>
        )
      </p>
    </li>
    <li>
      <p>
        Consolidated CanvasScope implementations so there is now just DrawScope and ContentDrawScope Renamed CanvasScope to DrawScope. Updated DrawScope to implement Density interface and provide LayoutDirection Deleted DrawScope subclass in ContentDrawScope Painter and PainterModifier have been updated to no longer maintain an RTL property themselves as DrawScope provides this already without manually providing it (
        <a href="https://android-review.googlesource.com/#/q/I1798e4b2b325297c3b5394aa99be3db935e369b7">I1798e</a>
        )
      </p>
    </li>
    <li>
      <p>
        DoubleTapGestureFilter now disambiguates SingleTapGestureFilter across the tree. (
        <a href="https://android-review.googlesource.com/#/q/If92b1647f11c296103c26b5f7e9e031add94323e">If92b1</a>
        )
      </p>
    </li>
    <li>
      <p>
        Updated Alignment API and added support for absolute alignment (which does not auto-mirror in Rtl context) (
        <a href="https://android-review.googlesource.com/#/q/I38cd32c487c9dd72486476943c28afbed96aaf4e">I38cd3</a>
        )
      </p>
    </li>
    <li>
      <p>
        DrawLayer modifiers api has been changed: outlineShape renamed to shape and has the RectangleShape default value and now non-nullable; clipToOutline renamed to clip; clipToBounds removed as it is the same as clip == true with RectangleShape (
        <a href="https://android-review.googlesource.com/#/q/I7ef1155f6a1d93c41a98411f9e4632c4e18956e1">I7ef11</a>
        ,
        <a href="https://issuetracker.google.com/issues/155075735">b/155075735</a>
        )
      </p>
    </li>
    <li>
      <p>
        Updated higher level compose APIs that expose a Canvas to expose CanvasScope instead. This removes the need for consumers to maintain their own Paint objects. For consumers that still require access to a Canvas they can use the drawCanvas extension method which provides a callback to issue drawing commands with the underlying Canvas. (
        <a href="https://android-review.googlesource.com/#/q/I80afdf4c0a648962aa6ef1efc05b1d3b65757094">I80afd</a>
        )
      </p>
    </li>
    <li>
      <p>
        WithConstraints trailing lambda API has been changed. Now instead of two params it has a receiver scope which in addition to constraints and layoutDirection provides minWidth, maxWidth, minHeight and maxHeight properties in Dp (
        <a href="https://android-review.googlesource.com/#/q/I91b9af740cd2613ddd4fe6d63cd539a46b52fc52">I91b9a</a>
        ,
        <a href="https://issuetracker.google.com/issues/149979702">b/149979702</a>
        )
      </p>
    </li>
    <li>
      <p>
        Renamed LayoutModifier2 to LayoutModifier. (
        <a href="https://android-review.googlesource.com/#/q/Id29f36d6b19674d189abb198a7656562b3b310b5">Id29f3</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed deprecated LayoutModifier interface. (
        <a href="https://android-review.googlesource.com/#/q/I2a9d6a9840072d5cb92e68155be2d07de8411d04">I2a9d6</a>
        )
      </p>
    </li>
    <li>
      <p>
        Intrinsic measurements functions in Layout and LayoutModifier2 have an IntrinsicMeasureScope receiver now which provides intrinsics query API with implicitly propagated layout direction. (
        <a href="https://android-review.googlesource.com/#/q/Id9945cb41842df9f99132679b5b68a0f0edda53d">Id9945</a>
        )
      </p>
    </li>
    <li>
      <p>
        Layout and LayoutModifier children can be measured with a different layout direction. (
        <a href="https://android-review.googlesource.com/#/q/Ibd7319b7caa93b2bc7fb38df3678e2bb8298652e">Ibd731</a>
        )
      </p>
    </li>
    <li>
      <p>
        New Modifier.zIndex() is added to control the drawing order of the children within the same parent layout. elevation property on DrawLayerModifier is renamed to shadowElevation and doesn't control the drawing order anymore. The params order fo DrawShadow is changed: elevation is now the first one and the shape is the second one with a RectangleShape default. (
        <a href="https://android-review.googlesource.com/#/q/I201506a33a55a4c48a4dbb6fe4e580824410588f">I20150</a>
        ,
        <a href="https://issuetracker.google.com/issues/152417501">b/152417501</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed onSizeChange and onPositionChange in Owner. (
        <a href="https://android-review.googlesource.com/#/q/I5c718529e3d46b765d00e307092228dde761ca4d">I5c718</a>
        )
      </p>
    </li>
    <li>
      <p>Added Constraints2, a copy of Constraints that does only supports Int connstraints values rather than IntPx. IntPx will be removed and all integer constraints will be assumed to be pixels like Android.</p>

      <ul>
        <li>
          Added IntSize as well, which will eventually replace IntPxSize. (
          <a href="https://android-review.googlesource.com/#/q/I4b43a8b15e346138d3bd40427791d89472782e38">I4b43a</a>
          )
        </li>
      </ul>
    </li>
    <li>
      <p>
        Made Alignment instantiable with arbitrary values. Added 1D Alignments. (
        <a href="https://android-review.googlesource.com/#/q/Ia0c05cfa122108b48ac22de310ee98e0460f7f3f">Ia0c05</a>
        )
      </p>
    </li>
    <li>
      <p>
        alignToSiblings now accepts a Measured instead of Placeable. (
        <a href="https://android-review.googlesource.com/#/q/I5788dd1dab4d18c475e51a1e9a0440aba2bbc794">I5788d</a>
        )
      </p>
    </li>
    <li>
      <p>
        (
        <a href="https://android-review.googlesource.com/#/q/I45f09c681afda9c83483b20405ec21292593b41a">I45f09</a>
        ,
        <a href="https://issuetracker.google.com/issues/152842521">b/152842521</a>
        )
      </p>

      <ul>
        <li>Renamed ScaleFit to ContentScale</li>
        <li>Moved ContentScale from ui-graphics to ui-core module to live in the same module as the Alignment API.</li>
        <li>Renamed FillMaxDimension to Crop</li>
        <li>Renamed FillMinDimension to Fit</li>
        <li>Renamed Fit to Inside to better match</li>
        <li>ImageView.ScaleType equivalents</li>
        <li>Added documentation indicating that the combination of Crop and Alignment.Center achieves the same result as ImageView.ScaleType.CENTER_CROP and Fit used with Alignment.Center achieves the same result as ImageView.ScaleType.FIT_CENTER Inside used with Alignment.Center achieves the same result as ImageView.ScaleType.CENTER_INSIDE</li>
      </ul>
    </li>
    <li>
      <p>
        Rtl support for draw modifiers. (
        <a href="https://android-review.googlesource.com/#/q/I0aaf9072582e51e967d403cfec1d39f89680fc71">I0aaf9</a>
        )
      </p>
    </li>
    <li>
      <p>
        Released API for inflating Android Views from XML. See ViewInCompose demo for more details. (
        <a href="https://android-review.googlesource.com/#/q/I42916dddd66770e866437232e3d1e118197de297">I42916</a>
        )
      </p>
    </li>
    <li>
      <p>Improve DrawModifier API:</p>

      <ul>
        <li>Made the receiver scope for draw() ContentDrawScope</li>
        <li>Removed all parameters on draw()</li>
        <li>DrawScope has same interface as former CanvasScope</li>
        <li>
          ContentDrawScope has drawContent() method (
          <a href="https://android-review.googlesource.com/#/q/Ibaced5feb8778510b8fe78e96f4fd3da1a6fda50">Ibaced</a>
          ,
          <a href="https://issuetracker.google.com/issues/152919067">b/152919067</a>
          )
        </li>
      </ul>
    </li>
    <li>
      <p>
        Added positionInParent and boundsInParent for LayoutCoordinates. (
        <a href="https://android-review.googlesource.com/#/q/Icacdd0909bc434cd5fd935c46e0a07b965c6a38d">Icacdd</a>
        ,
        <a href="https://issuetracker.google.com/issues/152735784">b/152735784</a>
        )
      </p>
    </li>
    <li>
      <p>
        DrawLayerModifier and drawLayer() now default clipToBounds and clipToOutline to false. (
        <a href="https://android-review.googlesource.com/#/q/I0eb8b08323e0031cae87194d407351e6bdf5e189">I0eb8b</a>
        ,
        <a href="https://issuetracker.google.com/issues/152810850">b/152810850</a>
        )
      </p>
    </li>
    <li>
      <p>
        Renamed LayoutResult to MeasureResult. (
        <a href="https://android-review.googlesource.com/#/q/Id8c686b5f08d58e8e48d015ed42570e306687882">Id8c68</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added LayoutModifier2, a new API for defining layout modifiers; deprecated LayoutModifier (
        <a href="https://android-review.googlesource.com/#/q/If32acbfac08c677b80f9e4d5f624fe15c95ac60d">If32ac</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced Modifier plus operator with factory extension functions (
        <a href="https://android-review.googlesource.com/#/q/I225e444f50956d84e15ca4f1378b7f805d54e0ca">I225e4</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added translationX/Y properties to support offseting the display list of drawing commands for a given Layer. This is useful to move content in response to animations or touch events. (
        <a href="https://android-review.googlesource.com/#/q/I8641cc7d236296a4abf56be037746f5304488cf0">I8641c</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added pivotX, pivotY parameters to Layer APIs to support rotation and scaling around a particular point on a layer (
        <a href="https://android-review.googlesource.com/#/q/Icf7c37ff805b4e86aed528f28d83c7d9634639fa">Icf7c3</a>
        )
      </p>
    </li>
    <li>
      <p>
        Add OnPositionedModifier and OnChildPositionedModifier to replace OnPositioned and OnChildPositioned composable functions. (
        <a href="https://android-review.googlesource.com/#/q/I2ec8fb4687b0b85e18174178562149745c03c7fd">I2ec8f</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added LayerModifier, a modifier that allows adding a RenderNode for a Layout. It allows setting clipping, opacity, rotation, scaling, and shadows. This will replace RepaintBoundary. (
        <a href="https://android-review.googlesource.com/#/q/I7100dfe7a795567a48c2d5b3094e3dbd47e0f9c7">I7100d</a>
        ,
        <a href="https://issuetracker.google.com/issues/150774014">b/150774014</a>
        )
      </p>
    </li>
    <li>
      <p>
        Made the layout direction be propagated from parent layout node to children. Added layout direction modifier. (
        <a href="https://android-review.googlesource.com/#/q/I3d9559ddec464850d22466793975b41757e0224e">I3d955</a>
        )
      </p>
    </li>
    <li>
      <p>
        Stack component supports right-to-left directionality (
        <a href="https://android-review.googlesource.com/#/q/Ic9e00dfc5b8c16ff305c14bc38de38cdf72d4cf5">Ic9e00</a>
        )
      </p>
    </li>
    <li>
      <p>
        Initial support for Rtl in Compose layout (
        <a href="https://android-review.googlesource.com/#/q/Ia5519f42c6ded656242321a92c8c8069c2f42ab7">Ia5519</a>
        )
      </p>
    </li>
    <li>
      <p>
        Density and DensityScope were merged into one interface. Instead of ambientDensity() you can now use DensityAmbient.current. Instead of withDensity(density) just with(density) (
        <a href="https://android-review.googlesource.com/#/q/I11cb1f069a95f32f4ecab631f49d38dc1c071a42">I11cb1</a>
        )
      </p>
    </li>
    <li>
      <p>
        Changed LayoutCoordinates to make providedAlignmentLines a Set instead of a Map and have LayoutCoordinates implement the get() operator instead for retrieving a value. This makes it easier for modifiers to modify one or more value of the set without creating a new collection for each modifier. (
        <a href="https://android-review.googlesource.com/#/q/I0245a750ed12e822d61fa7d87c52bd708996f55d">I0245a</a>
        )
      </p>
    </li>
    <li>
      <p>LayoutCoordinates no longer has a position property. The position property does not make sense when considering LayoutModifiers, rotation, or scaling. Instead, developers should use parentCoordinates and childToLocal() to calculate the transform from one LayoutCoordinate to another.</p>

      <p>
        LayoutCoordinates uses IntPxSize for the size property instead of PxSize. Layouts use integer pixel sizes for layouts, so all layout sizes should use integers and not floating point values. (
        <a href="https://android-review.googlesource.com/#/q/I9367be21c2c202c8b6ad889b50a29454773f41af">I9367b</a>
        )
      </p>
    </li>
    <li>
      <p>
        Improvements to the API surface of Constraints (
        <a href="https://android-review.googlesource.com/#/q/I0fd1505ae9a68c067a82eff6ab02b43080fe153c">I0fd15</a>
        )
      </p>
    </li>
    <li>
      <p>Created CanvasScope API that wraps a Canvas object to expose a stateless, declarative drawing API surface. Transformations are contained within their own receiver scope and sizing information is also scoped to corresponding inset bounds. It does not require a consumer to maintain its own Paint state object for configuring drawing operations.</p>

      <ul>
        <li>
          Added CanvasScopeSample as well as updated the demo app to include a declarative graphics demo (
          <a href="https://android-review.googlesource.com/#/q/Ifd86d39ef5807d34cc06d06854d24330e5e00164">Ifd86d</a>
          )
        </li>
      </ul>
    </li>
    <li>
      <p>
        Removed unused MaskFilter API as it has limited usage and is not optimized for hardware acceleration in most use cases (
        <a href="https://android-review.googlesource.com/#/q/I54f76d8af47b4e015d84a52d36a336f68f31d84b">I54f76</a>
        )
      </p>
    </li>
    <li>
      <p>
        RectangleShape moved from androidx.ui.foundation.shape.* to androidx.ui.graphics.* (
        <a href="https://android-review.googlesource.com/#/q/Ia74d5a3bbe2ee3a28bbddb57a2aef2607679d4ac">Ia74d5</a>
        ,
        <a href="https://issuetracker.google.com/issues/154507984">b/154507984</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced all nullable Color uses in API with non-nullable and use Color.Unset instead of null (
        <a href="https://android-review.googlesource.com/#/q/Iabaa7c6334857833cdb0d5958f062e2e576bd240">Iabaa7</a>
        )
      </p>
    </li>
    <li>
      <p>
        Introduce additional optional rect parameter to ImagePainter to support drawing a subsection of underlying ImageAsset (
        <a href="https://android-review.googlesource.com/#/q/I0ea9ec2f991b30b0e68fa702ebdf44cbb0848901">I0ea9e</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added Unset Color to represent an unset value without boxing Colors. (
        <a href="https://android-review.googlesource.com/#/q/If901abf1400233a97a63de2f01de3a7f75b9c55a">If901a</a>
        )
      </p>
    </li>
    <li>
      <p>Added Canvas.rotate and Canvas.scale extension methods to consume optional pivot coordinates for transformations. These default to the top left corner of the current canvas translation.</p>

      <p>
        Also moved Canvas.rotateRad to be an extension method for consistency (
        <a href="https://android-review.googlesource.com/#/q/Ibaca68af0082251b89fe8bbe0b8e73f2a86e4918">Ibaca6</a>
        )
      </p>
    </li>
    <li>
      <p>
        Created PixelMap API to support querying pixel information from an ImageAsset. (
        <a href="https://android-review.googlesource.com/#/q/I69ad6c9a12ceed74ef6e4cf10786da309baa5580">I69ad6</a>
        )
      </p>
    </li>
    <li>
      <p>
        Renamed toFrameworkRect/toFrameworkRectF to toAndroidRect/toAndroidRectF to match naming convention for object conversions between compose and the Android framework APIs they are built on top of. Also updated docs on these APIs (
        <a href="https://android-review.googlesource.com/#/q/I86337019ca9440bde7202943bb6493a5b22ce7ca">I86337</a>
        )
      </p>
    </li>
    <li>
      <p>Added VectorPainter API to replace existing subcomposition API for vector graphics. Result of subcomposition is a VectorPainter object instead of a DrawModifier. Deprecated previous DrawVector composables in favor of VectorPainter.</p>

      <p>
        Renamed Image(Painter) API to PaintBox(Painter) Created Vector composable that behaves like the Image composable except with a VectorAsset instead of an ImageAsset (
        <a href="https://android-review.googlesource.com/#/q/I9af9a365eb744e0cdb343cf424f4df5160d6c2b4">I9af9a</a>
        ,
        <a href="https://issuetracker.google.com/issues/149030271">b/149030271</a>
        )
      </p>
    </li>
    <li>
      <p>
        Renamed Image to ImageAsset to better differentiate the difference between the Image data and the upcoming Image composable used to participate in layout and draw content. _Body:Created extension method on android.graphics.Bitmap, Bitmap.asImageAsset(), to create an instance of an ImageAsset useful for combining traditional Android application development with the compose framework (
        <a href="https://android-review.googlesource.com/#/q/Id5bbdf3fe1cf68750a76bb955b20e06d1f81a71e">Id5bbd</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added TextDirection.Content (
        <a href="https://android-review.googlesource.com/#/q/I48f3683066739b4d88b2e998f9b216a5cd874f8d">I48f36</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added TextDecoration.plus operator (
        <a href="https://android-review.googlesource.com/#/q/I0ad1a94cb5f5b296831a6b7283c525ab6af8ee35">I0ad1a</a>
        )
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">Force</code>
        is removed from TextDirectionAlgorithm enum values (
        <a href="https://android-review.googlesource.com/#/q/Icc944e7ca5f706fa8fd23f32fca7c4dbc1a0821f">Icc944</a>
        )
      </p>
    </li>
    <li>
      <p>
        TextDirectionAlgorithm is renamed as TextDirection (
        <a href="https://android-review.googlesource.com/#/q/I75ce894540855ae60201b05141ad40c400bda00a">I75ce8</a>
        )
      </p>
    </li>
    <li>
      <p>
        Implements LongPressAndDrag for TextField Selection. (
        <a href="https://android-review.googlesource.com/#/q/I17919b9c1514c8fa7d2b54062e4acc47e7685c8e">I17919</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added AnnotatedString.getStringAnnotations that returns all annotations within the range. (
        <a href="https://android-review.googlesource.com/#/q/I1fa00deebf7db5182d3607a33d958999aefe476b">I1fa00</a>
        )
      </p>
    </li>
    <li>
      <p>
        Changed the package name for Locale and LocaleList from androidx.ui.text to androidx.ui.intl (
        <a href="https://android-review.googlesource.com/#/q/I8132c50e8be9b7ac27e858573056abe9250426ca">I8132c</a>
        )
      </p>
    </li>
    <li>
      <p>
        TextField's cursor has a blinking animation (
        <a href="https://android-review.googlesource.com/#/q/Id10a71f42f66fae532cca35ec132bcc35a4bc660">Id10a7</a>
        )
      </p>
    </li>
    <li>
      <p>
        API change: AnnotatedString(builder: Builder) is renamed to annotatedString(builder: Builder). (
        <a href="https://android-review.googlesource.com/#/q/Ia63777788348827d4362e0bd6a4ab6cd64680062">Ia6377</a>
        )
      </p>
    </li>
    <li>
      <p>
        API change: AnnotatedString.Item is renamed to AnnotatedString.Range. (
        <a href="https://android-review.googlesource.com/#/q/I2d44dd9e4f565d5f90eeba93dc61a052109da32e">I2d44d</a>
        )
      </p>
    </li>
    <li>
      <p>
        Rename AnnotatedString.Builder.addAnnotationString to addStringAnnotation. (
        <a href="https://android-review.googlesource.com/#/q/I5059e6b6526a8fb64ab6ace7ad7e4637c718a19f">I5059e</a>
        )
      </p>
    </li>
    <li>
      <p>
        Now it is possible to hide/show software keyboard by using SoftwareKeyboardController which is delivered by onTextInputStarted callback (
        <a href="https://android-review.googlesource.com/#/q/I8dc44f64d4f457339364b9624c0b3e946cdf01b3">I8dc44</a>
        ,
        <a href="https://issuetracker.google.com/issues/151860051">b/151860051</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added plus operator for (Text/Paragraph/Span)Style which delegates to merge() function. (
        <a href="https://android-review.googlesource.com/#/q/Ia1add7b4d6a2b05c2ca2e3a3a1e40d5056471065">Ia1add</a>
        )
      </p>
    </li>
    <li>
      <p>
        FontWeight.lerp does not snap anymore. It is still a data class. (
        <a href="https://android-review.googlesource.com/#/q/I521c21831d2cd979be98d133668fa5229ba61b08">I521c2</a>
        )
      </p>
    </li>
    <li>
      <p>
        FontWeight constructor is now public, it is not data class anymore. (
        <a href="https://android-review.googlesource.com/#/q/Id6b1fb0dbda69497b113344ecb1f3b384d060bf9">Id6b1f</a>
        )
      </p>
    </li>
    <li>
      <p>
        Add getLineStart, getLineEnd, getEllipsisOffset and getEllipsisCount to TextLayoutResult (
        <a href="https://android-review.googlesource.com/#/q/Ibc801167d7f849e94a7f7ebfbdadc7f00f6dde2d">Ibc801</a>
        )
      </p>
    </li>
    <li>
      <p>
        ui-text module is renamed as ui-text-core (
        <a href="https://android-review.googlesource.com/#/q/I57dec72ca50e7288e37c9272ef6ce8bcc485a83e">I57dec</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed unused Size class as there is a duplicate Size class in the ui-geometry module that is being consumed. (
        <a href="https://android-review.googlesource.com/#/q/I1b602068d4c269ba9221eb2bf668026c495f4cee">I1b602</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added AdapterList, a scrolling list component that only composes and lays out the visible items. Currently known issues include that it is vertical-only and does not fully handle all cases of changes to its children. (
        <a href="https://android-review.googlesource.com/#/q/Ib351be89aabb59dac29806a935e377e90a2da9c2">Ib351b</a>
        )
      </p>
    </li>
    <li>
      <p>
        Add paddings, border, shape and background param to Box (
        <a href="https://android-review.googlesource.com/#/q/I05027a87956b6e4233a6b8992d321633e9fdcdc9">I05027</a>
        ,
        <a href="https://issuetracker.google.com/issues/148147281">b/148147281</a>
        )
      </p>
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      onFocusChange callback in text fields renamed to onFocusChanged (
      <a href="https://android-review.googlesource.com/#/q/Ida4a1a55e5a9119c3a740d28ad2e0d9126d40853">Ida4a1</a>
      )
    </li>
    <li>
      VerticalScroller and HoriziontalScroller have been deprecated. Use ScrollableColumn and ScrollableRow for build-in experience with Column/Row behaviour and parameters, or Modifier.verticalScroll and Modifier.horizontalScroll on your own element. Similarly, ScrollerPosition has been deprecated in favor of ScrollState' (
      <a href="https://android-review.googlesource.com/#/q/I400ce0e6c0e33aa865e0e49defef1eb92ac40a93">I400ce</a>
      ,
      <a href="https://issuetracker.google.com/issues/157225838">b/157225838</a>
      ,
      <a href="https://issuetracker.google.com/issues/149460415">b/149460415</a>
      ,
      <a href="https://issuetracker.google.com/issues/154105299">b/154105299</a>
      )
    </li>
    <li>
      <code translate="no" dir="ltr">runOnIdleCompose</code>
      renamed to
      <code translate="no" dir="ltr">runOnIdle</code>
      (
      <a href="https://android-review.googlesource.com/#/q/I836071f1c3c63d21417a531f336f8a93ca13f9ed">I83607</a>
      )
    </li>
    <li>
      Several testing APIs were renamed to be more intuitive. All findXYZ APIs were renamed to onNodeXYZ. All doXYZ APIs were renamed to performXYZ. (
      <a href="https://android-review.googlesource.com/#/q/I7f164b42b04196f023c4a2153d66825487998de4">I7f164</a>
      )
    </li>
    <li>
      Compose UI can now be composed inside ViewGroups without requiring a new composition. See ViewInteropDemo for an example. (
      <a href="https://android-review.googlesource.com/#/q/I9ab0b3ff5febce27c34e81dd55e3dce6ea1aa742">I9ab0b</a>
      ,
      <a href="https://issuetracker.google.com/issues/160455080">b/160455080</a>
      )
    </li>
    <li>
      Added sortWith and removeRange to MutableVector (
      <a href="https://android-review.googlesource.com/#/q/Icccf73d3dd073dab0c7e67edf06afe77ec19bc67">Icccf7</a>
      )
    </li>
    <li>
      Implement Drag Selection Handles to change selection for TextField. (
      <a href="https://android-review.googlesource.com/#/q/I27032ee670131726d579612591dafcf3d60680b6">I27032</a>
      )
    </li>
    <li>
      Removed Shader inline class that wrapped the NativeShader expect class Renamed NativeShader to Shader. The wrapped Shader inline class did not add anything valuable to the API surface and was an inline class, so use the NativeShader class directly. (
      <a href="https://android-review.googlesource.com/#/q/I25e4db3d4f59899b6a7c59613e49ed093e76da2f">I25e4d</a>
      )
    </li>
    <li>
      <p>Refactored PainterModifier to no longer provide scaling based on the given constraints and ContentScale parameter. Implementations of Painter are to scale their drawing content themselves based on the given size of the DrawScope they are drawing into.</p>

      <p>Fixed issue where VectorPainter's cache bitmap was sized to its default size instead of the given size to draw into.</p>

      <p>
        Updated ImagePainter to scale its content instead of relying on PainterModifier to do so on its behalf. (
        <a href="https://android-review.googlesource.com/#/q/I6ba901d9622d5070c64ee641044d9bfddd409222">I6ba90</a>
        )
      </p>
    </li>
    <li>
      <p>
        add top-level withFrameNanos function for animation timing (
        <a href="https://android-review.googlesource.com/#/q/Ie34c53e2e105353acc5ad56df0e15e1bc2a2da08">Ie34c5</a>
        )
      </p>
    </li>
    <li>
      <p>
        @Untracked annotation has been deprecated. Replace with @ComposableContract(tracked=false) (
        <a href="https://android-review.googlesource.com/#/q/Id211e1c7c168c5171bbf3c844792890ee87d4fc2">Id211e</a>
        )
      </p>
    </li>
    <li>
      <p>
        androidx.ui.foundation.TextFieldValue and androidx.ui.input.EditorValue is deprecated. TextField, FilledTextField and CoreTextField composables that uses that type is also deprecated. Please use androidx.ui.input.TextFieldValue instead (
        <a href="https://android-review.googlesource.com/#/q/I4066d1f4d2e3e3514753aa3495680292dc55f89d">I4066d</a>
        ,
        <a href="https://issuetracker.google.com/issues/155211005">b/155211005</a>
        )
      </p>
    </li>
    <li>
      <p>
        Fixed issue where pointer input dispatch would cause a crash if PointerInputFilters were removed via subcomposition during disptach. This is now fixed. (
        <a href="https://android-review.googlesource.com/#/q/I1f48bdee2fcb59eb0984c31ef4ce95d75417dcf4">I1f48b</a>
        ,
        <a href="https://issuetracker.google.com/issues/157998762">b/157998762</a>
        )
      </p>
    </li>
    <li>
      <p>
        Fixed issue where pointer input dispatch would cause a crash if PointerInputFilters were removed via subcomposition during disptach. This is now fixed. (
        <a href="https://android-review.googlesource.com/#/q/Iab398032792a8dde761ce5440650c774b4d56022">Iab398</a>
        ,
        <a href="https://issuetracker.google.com/issues/157998762">b/157998762</a>
        )
      </p>
    </li>
    <li>
      <p>Refactored Radius class to be an inline class. Removed companion creation methods in favor of function constructor with default parameter to have the radius along the y-axis match that of the mandatory x-axis radius parameter.</p>

      <p>
        Updated DrawScope.drawRoundRect to consume a single Radius parameter instead of 2 separate float values for the radius along the x and y axis (
        <a href="https://android-review.googlesource.com/#/q/I46d1b6c89a0f738304c915ce7ee52b621e10302f">I46d1b</a>
        )
      </p>
    </li>
    <li>
      <p>
        The Recompose composable is no longer a useful abstraction. Most recomposition should happen as a result of MutableState assignments. For anything beyond that, it is recommended that you use the
        <code translate="no" dir="ltr">invalidate</code>
        function to trigger a recomposition of the current scope. (
        <a href="https://android-review.googlesource.com/#/q/Ifc9926013c51c1db1e27e702a707bc1050f82fa6">Ifc992</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced usage of Px class in various compose classes as part of the large refactoring effort to only rely on Dp and primitive types for pixel parameters (
        <a href="https://android-review.googlesource.com/#/q/Iede0b310a8a8f4a39ba6ae4a99c753f7f590d8ed">Iede0b</a>
        )
      </p>
    </li>
    <li>
      <p>Changes the code generation strategy of Compose’s compiler. Prior to the change, the compose compiler would transform calls to composable functions. With this change, we now transform the body of a composable function and leave the callsite unaltered (mostly).</p>

      <p>This means that most of the logic communicating with the compose runtime happens at the start of the function body, instead of at the callsite.</p>

      <p>This should be a source-compatible change for all usage of compose. Most users of compose should not have to update any code as a result of this change.</p>

      <p>In order to support this work, the JVM signature of all composable functions has changed. A Composable function accepting a single parameter is transformed into a function accepting 3 parameters, the additional parameters are the Composer, a ‘key’ integer. a bitmask integer used to propagate metadata through calls.</p>

      <p>Compose now also transforms default arguments to a composable function. It does this without introducing an additional synthetic default overload of the function itself, so this change will result in fewer functions being defined.</p>

      <p>Known intentional behavioral changes resulting from this:</p>

      <ol>
        <li>Some calls will skip where they wouldn’t have previously</li>
        <li>Composable expressions in default argument expressions are now correctly subscribed to and handled</li>
      </ol>

      <p>This work included some optimizations: 1. The result of comparisons of parameters are propagated through the call graph to other composable functions. This will result in fewer comparisons at runtime, reduces the slot table size, as well as more skipping of composable functions that were previously not skipped 2. Paremeters which are determined to be “static” at compile time are no longer compared or stored in the runtime. This reduces the number of comparisons and reduces slot table size. 3. Control flow structure of the body of functions is used to minimize the number of groups that are generated. This reduces slot table size and results in less work for the runtime 4. Unused dispatch and receiver parameters to functions are not included in determining skippability of the function if they are not used inside of the body of the function.</p>

      <p>
        Most breaking changes were for APIs that the compiler targets directly, and typical use of compose will not be affected: 1. Composer::startExpr was removed 2. Composer::endExpr was removed 3. Composer::call was deprecated 4. The non-varargs overloads of
        <code translate="no" dir="ltr">key</code>
        have been removed. Use the
        <code translate="no" dir="ltr">vararg</code>
        version going forward. 5. The Pivotal annotation was deprecated. Use
        <code translate="no" dir="ltr">key</code>
        as a replacement. 6. ScopeUpdateScope::updateScope was changed to expect a Function3 instead of Function1 7. restartableFunction and restartableFunctionN were updated to include additional compile time parameters (
        <a href="https://android-review.googlesource.com/#/q/I607560574d83b4b6c1e68ff72cc4124c5f8c2602">I60756</a>
        ,
        <a href="https://issuetracker.google.com/issues/143464846">b/143464846</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed deprecated LayoutAlign modifiers. (
        <a href="https://android-review.googlesource.com/#/q/I108771c0374a5c6f88a610549ddae220eab30a4f">I10877</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed RepaintBoundary in favor of DrawLayerModifier (
        <a href="https://android-review.googlesource.com/#/q/I00aa4667ebe6248500b677b07d08744d5f79ae7f">I00aa4</a>
        )
      </p>
    </li>
    <li>
      <p>
        Button, FloatingActionButton and Clickable now have a separate
        <code translate="no" dir="ltr">enabled</code>
        param. Some of the params on Button were renamed or reordered. (
        <a href="https://android-review.googlesource.com/#/q/I54b5ac613632c1cd804b756d3ad2ccb7a475a149">I54b5a</a>
        )
      </p>
    </li>
    <li>
      <p>
        Replaced ButtonStyle with distinct functions and removed text (string) overload. See updated samples for usage information. (
        <a href="https://android-review.googlesource.com/#/q/If63ab32bd3f12050a2d2f4b8c0cb044bc7144a6b">If63ab</a>
        ,
        <a href="https://issuetracker.google.com/issues/146478620">b/146478620</a>
        ,
        <a href="https://issuetracker.google.com/issues/146482131">b/146482131</a>
        )
      </p>
    </li>
    <li>
      <p>
        Breaking changes to the ambients API. See log and
        <code translate="no" dir="ltr">Ambient&lt;T&gt;</code>
        documentation for details (
        <a href="https://android-review.googlesource.com/#/q/I4c7eea45f2b7bf41f8a8ba75fd667c06010469a9">I4c7ee</a>
        ,
        <a href="https://issuetracker.google.com/issues/143769776">b/143769776</a>
        )
      </p>
    </li>
    <li>
      <p>
        Changed the behavior of default TextDirection to be determined by LayoutDirection. i.e. If LayoutDirection is RTL, default TextDirection will be RTL. Previously it was TextDirection.ContentOrLtr/Rtl (
        <a href="https://android-review.googlesource.com/#/q/I4e80360f28d5e95daa86f3e1f280f3ec8855abf4">I4e803</a>
        )
      </p>
    </li>
    <li>
      <p>
        Bug fix: When font weight and font style are nested on an AnnotatedString, text is not rendered correctly. (
        <a href="https://android-review.googlesource.com/#/q/I77a9d8f3b69e9ee8246bdcb60ef82c42805bf879">I77a9d</a>
        )
      </p>
    </li>
    <li>
      <p>
        Adds commonly used parameters to Text(). If you are currently creating a local text style to pass a small number of these parameters, such as Text(style = TextStyle(textAlign = TextAlign.Center)), you can now just provide the parameters directly: Text(textAlign = TextAlign.Center) (
        <a href="https://android-review.googlesource.com/#/q/I8276873965f3588ed2cbc560f70a9ddd2405027b">I82768</a>
        )
      </p>
    </li>
    <li>
      <p>
        ui-android-text module is renamed as ui-text-android (
        <a href="https://android-review.googlesource.com/#/q/I68cbee56aab731acc66445f6578d41b7723a3c3f">I68cbe</a>
        )
      </p>
    </li>
  </ul>
  <devsite-hats-survey class="nocontent" hats-id="VxqvKSur40kxBYCLVTd0SSGykbno" listnr-id="5207477"></devsite-hats-survey>
