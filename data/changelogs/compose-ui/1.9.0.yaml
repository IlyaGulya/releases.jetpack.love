libraryId: compose-ui
groupId: androidx.compose
version: 1.9.0
releaseDate: 2025-08-13
#language=html
changelogHtml: |
  <h3 id="1.9.0" data-text="Version 1.9.0" tabindex="-1">Version 1.9.0</h3>
  <p>August 13, 2025</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.ui:ui-*:1.9.0</code>
    is released. Version 1.9.0 contains
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/5735a11c1798c2f8b419dfdc02347578a6ebf870..44da9aeaf3fa617c6f81f887691b37fe901109aa/compose/ui">these commits</a>
    .
  </p>
  <p><strong>Important changes since 1.8.0</strong></p>
  <ul>
    <li>
      Important changes in version 1.9.0 are covered in this
      <a href="https://android-developers.googleblog.com/2025/08/whats-new-in-jetpack-compose-august-25-release.html">blogpost</a>
    </li>
    <li>
      Lint checks shipped with Compose now require a minimum AGP version of 8.8.2. If you are unable to upgrade AGP, you can instead upgrade Lint on its own by using
      <code translate="no" dir="ltr">android.experimental.lint.version=8.8.2</code>
      (or a newer version) in your
      <code translate="no" dir="ltr">gradle.properties</code>
      . To run Compose lint checks inside the IDE, Android Studio Ladybug or newer is required.
    </li>
    <li>
      Breaking change: the
      <code translate="no" dir="ltr">graphicsLayer</code>
      modifier nodes now implements
      <code translate="no" dir="ltr">SemanticsModifierNode</code>
      . This can result in new
      <code translate="no" dir="ltr">SemanticsNodes</code>
      added to the semantics tree and, therefore, lead to test failures in tests that make assumptions about the semantics tree structure. For example, tests that use
      <code translate="no" dir="ltr">onChild</code>
      ,
      <code translate="no" dir="ltr">onParent</code>
      ,
      <code translate="no" dir="ltr">onSibling</code>
      , and other similar methods to make assertions can fail if a new node is added between the current and target nodes. The preferred way to fix these failures is to add a
      <code translate="no" dir="ltr">testTag</code>
      to the target node directly. Another approach is to use a looser matcher, such as
      <code translate="no" dir="ltr">onNode(hasAnyAncestor(hasText("ancestor")) and hasText("target"))</code>
      . (
      <a href="https://android-review.googlesource.com/#/q/I638b56cb3aa3f4f68a354dfa5a42201febee61bc">I638b5</a>
      )
    </li>
  </ul>
