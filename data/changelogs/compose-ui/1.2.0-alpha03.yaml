libraryId: compose-ui
groupId: androidx.compose
version: 1.2.0-alpha03
releaseDate: 2022-02-09
#language=html
changelogHtml: |
  <h3 id="1.2.0-alpha03" data-text="Version 1.2.0-alpha03" tabindex="-1">Version 1.2.0-alpha03</h3>
  <p>February 9, 2022</p>
  <p>
    <code translate="no" dir="ltr">androidx.compose.ui:ui-*:1.2.0-alpha03</code>
    is released.
    <a href="https://android.googlesource.com/platform/frameworks/support/+log/9dceceb54300ed028a7e8fc7a3454f270337ffde..db2ecbef194afcddfaede22e1d884a8959a9277c/compose/ui">Version 1.2.0-alpha03 contains these commits.</a>
  </p>
  <p><strong>API Changes</strong></p>
  <ul>
    <li>
      <code translate="no" dir="ltr">notifyFocusedRect</code>
      methods in
      <code translate="no" dir="ltr">TextInputSession</code>
      and
      <code translate="no" dir="ltr">TextInputService</code>
      are now deprecated and won't be called. Use
      <code translate="no" dir="ltr">BringIntoViewRequester</code>
      instead. (
      <a href="https://android-review.googlesource.com/#/q/Ia4302c5f6ee79eec30a9f42c149da8775e1ed57e">Ia4302</a>
      ,
      <a href="https://issuetracker.google.com/issues/192043120">b/192043120</a>
      ,
      <a href="https://issuetracker.google.com/issues/216842427">b/216842427</a>
      ,
      <a href="https://issuetracker.google.com/issues/178211874">b/178211874</a>
      )
    </li>
    <li>
      Introduced
      <code translate="no" dir="ltr">destroyDisplayListData</code>
      method on
      <code translate="no" dir="ltr">RenderNode</code>
      stub class (
      <a href="https://android-review.googlesource.com/#/q/I1e6593d802a1e3eb01ff4f0c6f530b016929cf18">I1e659</a>
      ,
      <a href="https://issuetracker.google.com/issues/216660268">b/216660268</a>
      )
    </li>
    <li>
      Added a new api which allows to premeasure children of
      <code translate="no" dir="ltr">SubcomposeLayout</code>
      you precomposed. (
      <a href="https://android-review.googlesource.com/#/q/I857eaaef22478013af2a80d05a273ef3e3bb01a9">I857ea</a>
      )
    </li>
    <li>
      <p>
        Added
        <code translate="no" dir="ltr">movableContentOf</code>
        which converts a composable lambda into a lambda that moves it state, and corresponding nodes, to any new location it is called. When the previous call leaves the composition the state is temporarily preserved and if a new call to the lambda enters the composition then the state, and associated nodes, are moved to the location of the new call. If no new call is added the state is removed permanently and remember observers are notified.
      </p>

      <p>
        If a
        <code translate="no" dir="ltr">movableContentOf</code>
        lambda is called multiple times in the same composition, new state and nodes are created for each call and, as calls leave the composition and new calls enter, the state is moved from the first leaving calls to the entering calls in the order they are called. All state not claimed by new calls is removed permanently. (
        <a href="https://android-review.googlesource.com/#/q/Ib4850095f241617a191ea7815fc947adaf867456">Ib4850</a>
        )
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">FontFamilyResolver</code>
        is now available via
        <code translate="no" dir="ltr">LocalFontFamilyResolver.current</code>
      </p>
    </li>
    <li>
      <p>
        Added
        <code translate="no" dir="ltr">createFontFamilyResolver(context)</code>
        and
        <code translate="no" dir="ltr">createFontFamilyResolver(context, coroutineScope)</code>
        to create new FontFamily resolvers outside of compose usage.
      </p>
    </li>
    <li>
      <p>
        Paragraph and MultiParagraph now take
        <code translate="no" dir="ltr">FontFamily.Resolver</code>
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">TextLayoutResult.layoutInput.fontFamilyResolver</code>
        now contains the resolver used for this layout, deprecated
        <code translate="no" dir="ltr">TextLayoutResult.layoutInput.resourceLoader</code>
        as it is no longer used. (
        <a href="https://android-review.googlesource.com/#/q/Id5a45c72bb6f33910643ee3da7f81a78dc093d86">Id5a45</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li><p>Support for async and optional font loading, with fallback behavior. This path is used by Text and TextField, and exposed through FontFamilyResolver</p></li>
    <li>
      <p>
        Support for preloading fonts via
        <code translate="no" dir="ltr">FontFamilyResolver.preload</code>
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">FontFamilyResolver.setAsyncLoadContext</code>
        allows setting the global coroutine context used for loading async fonts. (
        <a href="https://android-review.googlesource.com/#/q/I87fe8bfe5715c956843a7676fe7d783c3cd974d8">I87fe8</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        Added
        <code translate="no" dir="ltr">AndroidFont</code>
        , a new low-level API for providing new types of font resource descriptors on Android. For example, loading fonts from an app-specific backend, optionally locating pre-installed fonts on-device, or loading a font from a resource not provided by the current Font factories.
      </p>
    </li>
    <li>
      <p>
        Expanded
        <code translate="no" dir="ltr">Font.ResourceLoaded</code>
        API to support optional and async font loading. It is not recommended that application developers use this API directly. To add new types of fonts see
        <code translate="no" dir="ltr">AndroidFont</code>
        .
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">Font.AndroidResourceLoader</code>
        extension function allows construction of a
        <code translate="no" dir="ltr">Font.ResourceLoader</code>
        when outside of composition.
      </p>
    </li>
    <li>
      <p>
        Added
        <code translate="no" dir="ltr">loadingStrategy</code>
        parameter to resource-based fonts, to allow async loading when resource font references downloadable fonts XML. (
        <a href="https://android-review.googlesource.com/#/q/Ie5aeadd2feaf996d2c826d87dd310b8984e106c8">Ie5aea</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">Typeface(FontFamily)</code>
        constructor is deprecated. This was previously used to preload fonts, which may take up to 10 seconds for downloadable fonts. With downloadable fonts, this call may block for 10 seconds. Instead use
        <code translate="no" dir="ltr">FontFamilyResolver.preload</code>
        .
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">fontResource(FontFamily): Typeface</code>
        is deprecated. This was previously used to preload fonts, which may take up to 10 seconds for downloadable fonts. Instead use
        <code translate="no" dir="ltr">FontFamilyResolver.preload</code>
        (
        <a href="https://android-review.googlesource.com/#/q/If8e7c6ce7cd64be8094a576587cc1329e19d246f">If8e7c</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">SubcomposeLayoutState</code>
        constructor accepting
        <code translate="no" dir="ltr">maxSlotsToRetainForReuse</code>
        is now deprecated. Instead there is a new constructor accepting
        <code translate="no" dir="ltr">SubcomposeSlotReusePolicy</code>
        - a new interface allowing more granular control on what slots should be retained for the future reuse. (
        <a href="https://android-review.googlesource.com/#/q/I52c4d0360cd987ce03504807312beabdbe410ab0">I52c4d</a>
        )
      </p>
    </li>
    <li>
      <p>
        Exposes HSV and HSL function in
        <code translate="no" dir="ltr">Color</code>
        as non-experimental API. The Oklab color space is now public API. (
        <a href="https://android-review.googlesource.com/#/q/I08fb6cd74b1970deba71db86a0afdef0a8c1e735">I08fb6</a>
        ,
        <a href="https://issuetracker.google.com/issues/180731008">b/180731008</a>
        )
      </p>
    </li>
    <li>
      <p>
        Deprecated
        <code translate="no" dir="ltr">AndroidComposeTestRule.AndroidComposeStatement</code>
        , which was not meant to be in public API and didn't do anything for you anyway. (
        <a href="https://android-review.googlesource.com/#/q/Ibc46b2efcdb207a38296f470b284cfe8ac61e512">Ibc46b</a>
        )
      </p>
    </li>
    <li>
      <p>
        Internal generated kt class rename (
        <a href="https://android-review.googlesource.com/#/q/Ia0b9e518f8eb18ac6d5d341c933085a32db012ff">Ia0b9e</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        Removed
        <code translate="no" dir="ltr">FontLoadingStrategy.values</code>
        (
        <a href="https://android-review.googlesource.com/#/q/I42a9dbf74cb40af63ac504045b61e8cc1ceaaf9d">I42a9d</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        Global font loader is now called
        <code translate="no" dir="ltr">FontFamilyResolver</code>
        . (
        <a href="https://android-review.googlesource.com/#/q/I4f7736829412d6a553a8cffe4eba2b6cda1f3d19">I4f773</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        Use new font loading system for desktop. (
        <a href="https://android-review.googlesource.com/#/q/I9ce5cf9d537d95cf983c0e9a2a2462b5f046c359">I9ce5c</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
    <li>
      <p>
        <code translate="no" dir="ltr">FontFamily.Resolver.resolve</code>
        returns
        <code translate="no" dir="ltr">State&lt;Any&gt;</code>
        (
        <a href="https://android-review.googlesource.com/#/q/I4406c9752595e349abb8c4d733b9cad459cebfe2">I4406c</a>
        ,
        <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
        )
      </p>
    </li>
  </ul>
  <p><strong>Bug Fixes</strong></p>
  <ul>
    <li>
      TextFields will now be kept above the keyboard when they are focused and the keyboard is shown, when the soft input mode is
      <code translate="no" dir="ltr">ADJUST_PAN</code>
      . (
      <a href="https://android-review.googlesource.com/#/q/I8eaebb684b7828dcf92b0678a86d796b49b349c8">I8eaeb</a>
      ,
      <a href="https://issuetracker.google.com/issues/190539358">b/190539358</a>
      ,
      <a href="https://issuetracker.google.com/issues/192043120">b/192043120</a>
      )
    </li>
    <li>
      Desktop uses composition local for
      <code translate="no" dir="ltr">FontFamily.Resolver</code>
    </li>
    <li>
      Desktop
      <code translate="no" dir="ltr">FontLoader</code>
      is deprecated
    </li>
    <li>
      New
      <code translate="no" dir="ltr">createFontFamilyResolver</code>
      factory on Desktop (
      <a href="https://android-review.googlesource.com/#/q/I6bbbb76ece4ca3844f07e2fc22c2e63478bfdd8c">I6bbbb</a>
      ,
      <a href="https://issuetracker.google.com/issues/174162090">b/174162090</a>
      )
    </li>
    <li>
      The soft keyboard input type no longer flickers when changing focus between text fields. (
      <a href="https://android-review.googlesource.com/#/q/I1bf50cacddd8e20f9bd3d5124f277e5fef467ac0">I1bf50</a>
      ,
      <a href="https://issuetracker.google.com/issues/187746439">b/187746439</a>
      )
    </li>
  </ul>
